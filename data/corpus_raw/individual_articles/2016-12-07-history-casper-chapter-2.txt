Titre: The History of Casper - Chapter 2\nAuteur: Vlad Zamfir\nDate: December 7, 2016\nURL: https://blog.ethereum.org/2016/12/07/history-casper-chapter-2\nCatégorie: Non catégorisé\n\n==================================================\n\nhis chapter describes the game theory and economic security modelling we were doing in the all of . t recounts how the "bribing attacker model" led our research directly to a radical solution to the long range attack problem.nnhapter  he ribing ttacker, conomic ecurity, and the ong ange ttack roblemnnitalik and  had each been reasoning about incentives as part of our research before we ever met, so the proposition that "getting the incentives right" was crucial in proof-of-stake was never a matter of debate.nne were never willing to take "half of the coins are honest" as a security assumption.nn(t's in bold because it's important.) e knew that we needed some kind of "incentive compatibility" between bonded node incentives and protocol security guarantees.nnt was always our view that the protocol could be viewed as a game that could easily result in "bad outcomes" if the protocol's incentives encouraged that behaviour. e regarded this as a potential security problem. ecurity deposits gave us a clear way to punish bad behaviour slashing conditions, which are basically programs that decide whether to destroy the deposit.nne had long observed that itcoin was more secure when the price of bitcoin was higher, and less secure when it was lower. e also now knew that security deposits provided slasher with more economic efficiency than slasher only on rewards.nnt was clear to us that economic security eisted and we made it a high priority.nnhe ribing ttackernn'm not sure how much background italik had in game theory (though it was clear he had more than  did). y own game theory knowledge at the start of the story was even more minimal than it is at the end. ut  knew how to recognize and calculate ash quilibriums. f you haven't learned about ash quilibriums yet, this net paragraph is for you.nn ash quilibrium is a strategy profile (the players' strategy choices) with a corresponding payoff (givingnnnnnnnnonnrnntnnannknninnnnngnn or takingnnnnornntnnakinnngnn away) where no players individually have an incentive to deviate. "ncentive to deviate" means "they get more $ if they somehow change what they're doing". f you remember that, and every time you hear "ash quilbrium" you thought "no points for individual strategy changes", you'll have it.nnome time in late summer of ,  first ran into "the bribing attacker model" when  made an offhand response to an economic security question italik asked me on a kype call (" can just bribe them to do it").  don't know where  got the idea. italik then asked me again about this maybe a week or two later, putting me on the spot to develop it further.nny bribing game participants you can modify a game's payoffs, and through this operation change its ash quilibriums.nnere's how this might looknnhe bribe attack changes the ash quilibrium of the risoner's ilemma game from (p, eft) to (own,ight). he bribing attacker in this eample has a cost of  if (own, ight) is played.nnhe bribing attacker was our first useful model of economic security.nnefore the bribing attack, we usually thought about economic attacks as hostile takeovers by foreign, etra-protocol purchasers of tokens or mining power.  pile of eternal capital would have to come into the system to attack the blockchain. ith the bribe attack, the question became "what is the price of bribing the currently eisting nodes to get the desired outcome".nne hoped that the bribing attacks of our yet-to-be-defined proof-of-stake protocol would have to spend a lot of money to compensate for lost deposits.nnebate about "reasonableness" aside, this was our first step in learning to reason about economic security. t was fun and simple to use a bribing attacker. ou just see how much you have to pay the players to do what the attacker wants. nd we were already confident that we would be able to make sure that an attacker has to pay security-deposit-sized bribes to revert the chain in an attempted double-spend. e knew we could recognize "double-signing". o we were pretty sure that this would give proof-of-stake a quantifiable economic security advantage over a proof-of-work protocol facing a bribing attacker.nnhe ribing conomics of the ong ange ttacknnitalik and  applied the bribing attacker to our proof-of-stake research.nne found that o protocols without security deposits could be trivially defeated with small bribes. ou simply pay coin holders to move their coins to new addresses and give you the key to their now empty addresses.nn('m not sure who originally thought of this idea.) ur insistence on using the briber model easily ruled out all of the proof-of-stake protocols we knew about.  liked that. (t the time we had not yet heard of ae won's endermint, of ominic illiam's now-defunct ebble, or of ick illiamson's redits.)nnhis bribe attack also posed a challenge to security-deposit based proof-of-stake he moment after a security deposit was returned to its original owner, the bribing adversary could buy the keys to their bonded stakeholder address at minimal cost.nnhis attack is identical to the long range attack.nnt is acquiring old keys to take control of the blockchain. t meant that the attacker can create "false histories" at will. ut only if they start at a height from which all deposits are epired.nnefore working on setting the incentives for our proof-of-stake protocol, therefore, we needed to address the long-range attack problem.nnf we didn't address the long range attack problem, then it would be impossible for clients to reliably learn who really had the security deposits.nne did know that developer checkpoints could be used to deal with the long-range attack problem. e thought this was clearly way too centralized.nnn the weeks following my conversion to proof-of-stake, while  was staying at tephan ual's house outside of ondon,  discovered that there was a natural rule for client reasoning about security deposits.nnigned commitments are only meaningful if the sendernncurrentlynnhas a deposit.nnhat is to say, after the deposit is withdrawn, the signatures from these nodes are no longer meaningful. hy would  trust you after you withdraw your depositnnhe bribing attack model demanded it.nnt would cost the bribing attacker almost nothing to break the commitments after the deposit is withdrawn.nnhis meant that a client would hold a list of bonded nodes, and stop blocks at the door if they were not signed by one of these nodes.nngnoring consensus messages from nodes who don'tnncurrentlynnhave security depositsnnsolvesnncircumvents the long-range attack problem.nnnstead of authenticating the current state based on the history starting from the genesis block, we authenticate it based on a list of who currently has deposits.nnhis is radically different from proof-of-work.nnn o, a block is valid if it is chained to the genesis block, and if the block hash meets the difficulty requirement for its chain. n this security deposit-based model, a block is valid if it was created by a stakeholder with a currently eisting deposit. his meant that you would need to have current information in order to authenticate the blockchain. his subjectivity has caused a lot of people a lot of concern, but it is necessary for security-deposit based proof-of-stake to be secure against the bribing attacker.nnhis realization made it very clear to me that the proof-of-work security model and the proof-of-stake security model are fundamentally not compatible.  therefore abandoned any serious use of "hybrid" o/o solutions. rying to authenticate a proof-of-stake blockchain from genesis now seemed very obviously wrong.nneyond changing the authentication model, however, we did need to provide a way to manage these lists of security deposits.nne had to use signatures from bonded nodes to manage changes to the list of bonded nodes, and we had to do it after the bonded nodes come to consensus on these changes.nntherwise, clients would have different lists of bonded validators, and they would therefore be unable to agree on the state of thereum.nnond time needed to be made long, so that clients have time to learn about the new, incoming set of bonded stakeholders.nns long as clients were online enough, they could keep up to date.  thought we would use twitter to share the bonded node list, or at least a hash, so that new and hibernating clients could get synchronized after their user enters a hash into the .nnf you have the wrong validator list you can getnnman-in-the-middlednn.nnut it's really not that bad. he argument was (and still is!) thatnnyou only need to be able to trust an eternal source for this information oncenn. fter that once, you will be able to update your list yourself - at least, if you are able to be online regularly enough to avoid the "long range" of withdrawn deposits.nn know that it might take some getting used to. ut we can only rely on fresh security deposits. italik was a bit uncomfortable with this argument at first, trying to hold onto the ability to authenticate from genesis, but eventually was convinced by the necessity of this kind of subjectivity in proof of stake protocols. italik independently came up with hisnnweak subjectivity scoring rulenn, which seemed to me like a perfectly reasonable alternative to my idea at the time, which was basically "have all the deposits sign every th block to update the bonded node list".nnith the nails in the nothing-at-stake and long-range attack coffins completely hammered in, we were ready to start choosing our slashing conditions.nnhe net chapter will document what we learned from our first struggles to define a consensus protocol by specifying slashing conditions. 'll also tell you about what we learned from talking with fine people from our space about our research. he game theory and economic modelling story presented here will continue developing in hapter .nn he views epressed here are solely my own personal views and do not represent those of the thereum oundation.  am solely responsible for what 've written and am not am not acting as a spokesperson for the oundation.
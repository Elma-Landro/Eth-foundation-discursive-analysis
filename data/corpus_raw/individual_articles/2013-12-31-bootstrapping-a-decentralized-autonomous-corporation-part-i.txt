Titre: Bootstrapping A Decentralized Autonomous Corporation: Part I\nAuteur: Vitalik Buterin\nDate: December 31, 2013\nURL: https://blog.ethereum.org/2013/12/31/bootstrapping-a-decentralized-autonomous-corporation-part-i\nCatégorie: Non catégorisé\n\n==================================================\n\norporations,  presidential candidate itt omney reminds us, are people. hether or not you agree with the conclusions that his partisans draw from that claim, the statement certainly carries a large amount of truth. hat is a corporation, after all, but a certain group of people working together under a set of specific rules hen a corporation owns property, what that really means is that there is a legal contract stating that the property can only be used for certain purposes under the control of those people who are currently its board of directors – a designation itself modifiable by a particular set of shareholder. f a corporation does something, it’s because its board of directors has agreed that it should be done. f a corporation hires employees, it means that the employees are agreeing to provide services to the corporation’s customers under a particular set of rules, particularly involving payment. hen a corporation has limited liability, it means that specific people have been granted etra privileges to act with reduced fear of legal prosecution by the government – a group of people with more rights than ordinary people acting alone, but ultimately people nonetheless. n any case, it’s nothing more than people and contracts all the way down.nnowever, here a very interesting question arises do we really need the people n the one hand, the answer is yes although in some post-ingularity future machines will be able to survive all on their own, for the forseeable future some kind of human action will simply be necessary to interact with the physical world. n the other hand, however, over the past two hundred years the answer has been increasingly no. he industrial revolution allowed us, for the first time, to start replacing human labor with machines on a large scale, and now we have advanced digitized factories and robotic arms that produce comple goods like automobiles all on their own. ut this is only automating the bottom removing the need for rank and file manual laborers, and replacing them with a smaller number of professionals to maintain the robots, while the management of the company remains untouched. he question is, can we approach the problem from the other direction even if we still need human beings to perform certain specialized tasks, can we remove the management from the equation insteadnnost companies have some kind of mission statement often it’s about making money for shareholders at other times, it includes some moral imperative to do with the particular product that they are creating, and other goals like helping communities sometimes enter the mi, at least in theory. ight now, that mission statement eists only insofar as the board of directors, and ultimately the shareholders, interpret it. ut what if, with the power of modern information technology, we can encode the mission statement into code that is, create an inviolable contract that generates revenue, pays people to perform some function, and finds hardware for itself to run on, all without any need for top-down human directionnns et’s alk itcoin’s aniel armiernnpointed outnnin his own eploration on this concept, in a sense itcoin itself can be thought of as a very early prototype of eactly such a thing. itcoin has  million shares, and these shares are owned by what can be considered itcoin’s shareholders. t has employees, and it has a protocol for paying them   to one random member of the workforce roughly every ten minutes. t even has its own marketing department, to a large etent made up of the shareholders themselves. owever, it is also very limited. t knows almost nothing about the world ecept for the current time, it has no way of changing any aspect of its function aside from the difficulty, and it does not actuallynndonnanything per se it simply eists, and leaves it up to the world to recognize it. he question is can we do betternnomputationnnhe first challenge is obvious how would such a corporation actually make any decisions t’s easy to write code that, at least given predictable environments, takes a given input and calculates a desired action to take. ut who is going to run the code f the code simply eists as a computer program on some particular machine, what is stopping the owner of that machine from shutting the whole thing down, or even modifying its code to make it send all of its money to himself o this problem, there is only one effective answer distributed computing.nnowever, the kind of distributed computing that we are looking for here is not the same as the distributed computing in projects like home and oldinghome in those cases, there is still a central server collecting data from the distributed nodes and sending out requests. ere, rather, we need the kind of distributed computing that we see in itcoin a set of rules that decentrally self-validates its own computation. n itcoin, this is accomplished by a simple majority vote if you are not helping to compute the blockchain with the majority network power, your blocks will get discarded and you will get no block reward. he theory is that no single attacker will have enough computer power to subvert this mechanism, so the only viable strategy is essentially to “go with the flow” and act honestly to help support the network and receive one’s block reward. o can we simply apply this mechanism to decentralized computation hat is, can we simply ask every computer in the network to evaluate a program, and then reward only those whose answer matches the majority vote he answer is, unfortunately, no. itcoin is a special case because itcoin is simple it is just a currency, carrying no property or private data of its own.  virtual corporation, on the other hand, would likely need to store the private key to its itcoin wallet – a piece of data which should be available in its entirety tonnno onenn, not to everyone in the way that itcoin transactions are. ut, of course, the private key must still be usable. hus, what we need is some system of signing transactions, and even generating itcoin addresses, that can be computed in a decentralized way. ortunately, itcoin allows us to do eactly that.nnhe first solution that might immediately come to mind is multisignature addresses given a set of a thousand computers that can be relied upon to probably continue supporting the corporations, have each of them create a private key, and generate a -of- multisignature address between them. o spend the funds, simply construct a transaction with signatures from any  nodes and broadcast it into the blockchain. he problem here is obvious the transaction would be too large. ach signature makes up about seventy bytes, so  of them would make a   transaction – which is very difficult to get accepted into the network as bitcoind by defaultnnrefuses transactions with any script above , bytesnn. econd, the solution is specific to itcoin if the corporation wants to store private data for non-financial purposes, multisignature scripts are useless. ultisignature addresses work because there is a itcoin network evaluating them, and placing transactions into the blockchain depending on whether or not the evaluation succeeds. n the case of private data, an analogous solution would essentially require some decentralized authority to store the data and give it out only if a request has  out of  signatures as needed – putting us right back where we started.nnowever, there is still hope in another solution the general name given to this by cryptographers is “secure multiparty computation”. n secure multiparty computation, the inputs to a program (or, more precisely, the inputs to a simulated “circuit”, as secure multiparty computation cannot handle “if” statements and conditional looping) are split up using an algorithm callednnhamir’s ecret haringnn, and a piece of the information is given to each participant. hamir’s ecret haring can be used to split up any data into  pieces such that any  of them, but no - of them, are sufficient to recover the original data – you choose what  and  are when running the algorithm. -of-, -of- and -of- are all possible.  circuit can then be evaluated on the pieces of data in a decentralized way, such that at the end of the computation everyone has a piece of the result of the computation, but at no point during the computation does any single individual get even the slightest glimpse of what is going on. inally, the pieces are put together to reveal the result. he runtime of the algorithm is (n), meaning that the number of computational steps that it takes to evaluate a computation is roughly proportional to the cube of the number of participants at  nodes,  computational steps, and at  nodes  billion steps.  simple billion-step loop in ++ takes about twenty seconds on my own laptop, and servers can do it in a fraction of a second, so  nodes is currently roughly at the limit of computational practicality.nns it turns out, secure multiparty computation can be used to generate itcoin addresses and sign transactions. or address generation, the protocol is simplennveryone generates a random number as a private key.nnveryone calculates the public key corresponding to the private key.nnveryone reveals their public key, and uses hamir’s ecret haring algorithm to calculate a public key that can be reconstructed from any  of the thousand public keys revealed.nnn address is generated from that public key.nnecause public keysnncan be added, subtractednn, multiplied and even divided by integers, surprisingly this algorithm works eactly as you would epect. f everyone were to then put together a -of- private key in the same way, that private key would be able to spend the money sent to the address generated by applying the -of- algorithm to the corresponding public keys. his works because hamir’s ecret haring is really just an algebraic formula – that is to say, it uses only addition, subtraction, multiplication and division, and one can compute this formula “over” public keys just as easily as with addresses as a result, it doesn’t matter if the private key to public key conversion is done before the algebra or after it. igning transactions can be done in a similar way, although the process is somewhat more complicated.nnhe beauty of secure multiparty computation is that it etends beyond just itcoin it can just as easily be used to run the artificial intelligence algorithm that the corporation relies on to operate. o-called “machine learning”, the common name for a set of algorithms that detect patterns in real-world data and allow computers to model it without human intervention and are employed heavily in fields like spam filters and self-driving cars, is also “just algebra”, and can be implemented in secure multiparty computation as well. eally, any computation can, if that computation is broken down into a circuit on the input’s individual bits. here is naturally some limit to the compleity that is possible converting comple algorithms into circuits often introduces additional compleity, and, as described above, hamir’s ecret haring can get epensive all by itself. hus, it should only really be used to implement the “core” of the algorithm more comple high-level thinking tasks are best resolved by outside contractors.nncited about this topic ook forward to parts ,  and  how decentralized corporations can interact with the outside world, how some simple secure multiparty computation circuits work on a mathematical level, and two eamples of how these decentralized corporations can make a difference in the real world.nnee alsonnhttp//letstalkbitcoin.com/is-bitcoin-overpaying-for-false-security/nnhttp//bitcoinmagazine.com//bootstrapping-an-autonomous-decentralized-corporation-part--interacting-with-the-world/nnhttp//bitcoinmagazine.com//bootstrapping-a-decentralized-autonomous-corporation-part--identity-corp/
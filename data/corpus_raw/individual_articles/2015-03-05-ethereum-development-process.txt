Titre: The Ethereum Development Process\nAuteur: Gavin Wood\nDate: March 5, 2015\nURL: https://blog.ethereum.org/2015/03/05/ethereum-development-process\nCatégorie: Non catégorisé\n\n==================================================\n\no 'm not sure if this kind of development methodology has ever been applied to such an etreme before so  figured 'd document it. n a nutshell, it's sort of like test-driven triplet-programming development.nnhile speed-developing our alpha codebase, four of us sat around a table in the office in erlin. hree people (italik, eff and me) each coders of their own clean-room implementation of the thereum protocol. he fourth was hristoph, our master of testing.nnur target was to have three fully compatible implementations as well as an unambiguous specification by the end of three days of substantial development. ver distance, this process normally takes a few weeks.nnhis time we needed to epedite it our process was quite simple. irst we discuss the various consensus-breaking changes and formally describe them as best we can. hen, individually we each crack on coding up the changes simultaneously, popping our heads up about possible clarifications to the specifications as needed. eanwhile, hristoph devises and codes tests, populating the results either manually or with the farthest-ahead of the implementations (++, generally -).nnfter a milestone's worth of changes are coded up and the tests written, each clean-room implementation is tested against the common test data that hristoph compiled. here issues are found, we debug in a group. o far, this has proved to be an effective way of producing well-tested code quickly, and perhaps more importantly, in delivering clear unambiguous formal specifications.nnre there any more eamples of such techniques taken to the etreme
Titre: Ethereum Execution Layer Specification\nAuteur: Sam Wilson\nDate: on August 29, 2023\nURL: https://blog.ethereum.org/2023/08/29/eel-spec\nCatégorie: Non catégorisé\n\n==================================================\n\ntldrnn is an eecution layer reference implementation in ython.nnt's up to date with mainnet.nnt fills tests, and passes eisting ones.nnhere's an eample of an  implemented in  below.nnntroductionnnfter more than a year in development, we're pleased to publicly introduce thennthereum ecution ayer pecificationnn(affectionately known as .)  is a ython reference implementation of the core components of an thereum eecution client focused on readability and clarity. ntended as a spiritual successor to thennellow apernnthat's more programmer friendly and up-to-date with post-merge forks,  can fill and eecute state tests, follow mainnetnnnn, and is a great place to prototype new s.nn provides complete snapshots of the protocol at each fork—including upcoming ones—making it much easier to follow thannnsnn(which only propose changes) and production clients (which often mi multiple forks in the same codepath.)nnistorynneginning in , as a project of onsenys' uilt team and the thereum oundation, thenneth.-specnn(as it was known then) was inspired by the sheer frustration of having to decipher the cryptic notation of the ellow aper (nnigure nn) to understand the specific behavior of an  instruction.nnigure .nnarcane runes describing the basis of the blockchain paradigmnnrawing on the successfulnnonsensus ayer pecificationnn, we set out to create a similar eecutable specification for the eecution layer.nnresentnnoday,  is consumable as anntraditional ython repositorynnand asnnrendered documentationnn. t's still a bit rough around the edges, and doesn't provide much in the way of annotations or nglish eplanations for what various pieces do, but those will come with time.nnt's just ythonnnopefully a side-by-side comparison of the ellow aper and the equivalent code from  can show why  is a valuable complement to itnnigure .nness-than (nnnn)  instruction from ellow apernndefnnless_thannn(nnevmnnnnvmnn)nn-nnnnonennnn# nnleftnnnnpopnn(nnevmnn.nnstacknn)nnrightnnnnpopnn(nnevmnn.nnstacknn)nn# nncharge_gasnn(nnevmnn,nn__nn)nn# nnresultnnnnnn(nnleftnnnnrightnn)nnpushnn(nnevmnn.nnstacknn,nnresultnn)nn#  nnevmnn.nnpcnn+nnnnigure .nness-than (nnnn)  instruction from nnhilennigure nnmight be digestible to academics,nnigure nnis indisputably more natural to programmers.nnere's a videonnwalk-through of adding a simple  instructionnnif that's your kind of thing.nnriting estsnnt bears repeating  is just regular ython. t can be tested like any other ython library! n addition to the entirennethereum/testsnnsuite, we also have a selection ofnnpytestnntests.nnith a little help fromnneecution-spec-testsnn, any tests written for  can also be applied to production clients!nnnnhowing ifferencesnnaving snapshots at each fork is great for a smart contract developer popping in to see the specifics of how an  instruction works, but isn't very helpful for client developers themselves. or them,  can display the differences between forksnnigure .nnone difference between homestead and the  forknnn ample nn-nnis the first  to getnnan  implementationnnprovided by the author,nnuillaume alletnn! et's take a look.nnigure .nn-'s specification sectionnnirst, we introduce anncreated_contractsnnvariable to the  with transaction-level scopenndataclassnnclass nvironmentnncaller ddressnnblock_hashes istash]nnorigin ddressnncoinbase ddressnnnumber intnnbase_fee_per_gas intnngas_limit intnngas_price intnntime nnprev_randao ytesnnstate tatennchain_id nn+nncreated_contracts etddress]nnecond, we note which contracts were created in each transactionnn+nnevm.env.created_contracts.add(contract_address)nninally, we modifynnselfdestructnnso it only works for contracts noted innncreated_contractsnnnn-nn# register account for deletionnn-nnevm.accounts_to_delete.add(originator)nn-nn+nn# nly continue if the contract has been created in the same tnn+nnif originator in evm.env.created_contractsnn+nn+nn# register account for deletionnn+nnevm.accounts_to_delete.add(originator)nn+nnuturenne want  to become the default way to specify ore s, the first place  authors go to prototype their proposals, and the best possible reference for how thereum works.nnf you're interested in contributing or prototyping your , join us on thenn#specificationsnnchannel or grab an issue from ournnrepositorynn.nnootnotesnn does not implement peer-to-peer networking, and so requires a production client to sync blocks.nn↩nnunningnneecution-spec-testsnnagainst  is still unstablennnn.nn↩
Titre: Roundup #5\nAuteur: Ethereum Foundation Team\nDate: Team on August 23, 2017\nURL: https://blog.ethereum.org/2017/08/23/roundup-5\nCatégorie: Non catégorisé\n\n==================================================\n\nevelopment has steadily continued over the last month and a half as we approach the launch of etropolis. ver a series ofnncore dev callsnnover the last few months, we have specified and finalizednnthe snnfor etropolis, and made the appropriate changes to the ellow aper. etropolis has now been split up into two consecutive forks, named “yzantium” and “onstantinople”. s for yzantium (etropolis part one) are essentially finalized, and the last remaining work to be done has to do with writing tests and making sure that all clients are passing all tests.nnhe thereum network continues to see all-time highs innntransaction usagenn, and the network has maintained stability through this period withnnconsistently low uncle ratesnn.nnesearchnnork on the asper implementationnnhas continuednn, and thennasper hybrid fork choice rulennis now fully passing its initial test suite. et steps include further testing, and integration into pyethapp.nnork on a sharding implementation in python has started in full force at thennsharding reponn, as we have added several new developers over the past few months to help with this. ee thenndocs foldernnfor a partial specification of the roadmap.nnork has started on a “testing language” which can be used to quickly write and run tests for proof of work, asper and sharding fork choice rules. his should substantially improve coverage and accelerate testing for both asper and sharding.nn co-authored lasma whitepapernnhas been releasednn. ultiple groups in the community have already epressed interest in creating implementations.nnhe research documents have been reorganized somewhat. ee papers atnnhttps//github.com/ethereum/research/tree/master/papersnnand the problems list atnnhttps//github.com/ethereum/research/wiki/roblemsnn.nnethnnmplemented the followingnnransaction poolnnlimit-eemptionsnnfor locally created transactions.nnocal transaction journalnnfor locally created and not yet eecuted transactions to survive node crashes and/or restarts.nneduced the size of the chain database on disk tonnhalf it’s current sizenn.nnupport for thennrezor hardware walletnn, in addition to the eisting edger support.nnariousnncode quality fiesnncourtesy ofnnegonelbrenn.nnurrently working onnneworkingnnlog storagennandnnlog generationnn,nnreducingnnfull-chain filtering time to secondsnn.nnuerilla (offline) pruningnnto manually clean database without a chain resync.nnenerational disk syncnn, reducing database size and block processing time.nnynchronizationnnstability fiesnnand batched database writes.nnerging etropolis (yzantium)  implementations.nno-mobilennfies for innand nndocumentation generationnn.nnistnnist has surpassed two million cumulative downloads for all versions. ersion .. (of both ist and allet) have had over k downloads.nnist . has been released, with some major features including support for warm upload and  supported urls.nnhe thereum allet has also been updated to support  on all address fields, including send and contract eecution address fields. okens are easier to subscribe to by simply typing the three letter symbol.nnhe ist repo now has over  open issues, including  new issues in the last few months. e are working on restructuring how to handle issues, as many of them are not individual issues but are requests for tech support.nnist research has advanced, and now enables dapp development within a restricted subset of javascript that would allow running mist in a browser. e are working on releasing more details and a proof of concept in the coming month.nnnnhe weekend of ugust - in ondon was the first community-driven  workshop, where representatives of the community at large including representatives of multiple wallets, individuals working on ethereum projects and other  stakeholders discussed the current state and future of .  summary post is availablennherenn, but here are some highlightsnnhe community is interested in seeing the net version of the  registrar focus on providing incentives to release unused domains, while minimising costs for users of .nnhe community set priorities of creating a dispute resolution system as a voluntary second layer solution, and providing safeguards from impersonators and other security features to be built into multiple voluntary second-layer solutions.nnhere is a consensus on how domain owners can give safeguards to subdomain owners.nnhe community felt that some work should be attempted to improve the efficiencies of the domain reselling process.nneb.jsnnn the last two weeks, web.js beta was released and immediately and widely used by the community.  few packages already started integrating the new version into their libraries. ince the first beta release, issues were found and fied and improvements have been added so that the beta is currently at beta..nnnce web.js . is ready for prime time, a separate blog post will introduce its new features.nno try it out yourself, either clone thenn. branchnnor install it viannnpm install web..-beta.nnlease add issues and suggested improvements to thennitub issues.nnight lientnnew / protocol version is being prepared.nnltra-fast log history search has been implemented (needs / to work in light client mode).nn++nnetropolis changes are being finalized, and new precompiled contracts are being benchmarked.nnhennunter ++ packagennmanager has been integrated into the project to increase portability.nnnnprototype of state snapshot supportnnfor ++ client is being prepared.nnhe ethminer was removed from the cpp-ethereum project. he newnnethminernnrepo was created for the mining community. e are helping with the maintenance of the code, and building and distributing the binaries. he miner itself has been improved, and can switch work packages much more quickly.nnoliditynne added support fornn“eperimental” featuresnnthat can be switched on via a “pragma” statement in the source code. ne of these features is thennnew  encodernn, which can encode arbitrarily nested arrays! nother eperimental feature that will soon be available is thennautomated verificationnnof assertions and overflow conditions using an  solver. e also fiednntwonnbugsnnin the code generator. part from that, we implemented many smaller changes thatnnimprovennerrornnmessagesnn, addednnnewnnwarningsnnandnnimprovednnsecuritynn. astly, work has begun on implementingnnviewnnandnnpurennfunction specifiersnn.nneminne are currently pushing a lot of refactoring and / changes.nnn the near future, the master branch will be deployed tonnhttps//yann.github.io/reminninstead of remi.ethereum.org, allowing us to fi bugs and polish everything before pushing back tonnremi.ethereum.orgnn.nnmportant notennlease do not use it for your normal development work as it isn’t stable yet. nd feel free to comment it -nnhttps//gitter.im/ethereum/reminn.nnhe new  includes a terminal (nnhttps//github.com/ethereum/browser-solidity/pull/nn) that logs incoming transactions and provides an entry point to web. ote that we have split the contract tab so there are now compile and run tabs.nnecently, few small s has been pushed on the ebugger (nnhttps//github.com/ethereum/remi/pull/nn-nnhttps//github.com/ethereum/remi/pull/nn-nnhttps//github.com/ethereum/remi/pull/nn).nnou can also see what is left to do for this milestone herennhttps//github.com/ethereum/browser-solidity/issues/nnnnetropolis support was added to  all tests were passed. lso - has been updated to support new features for etropolis, like support for  and return buffers. he - interface is evolving slowly, but only  trace support is missing to mark it as fully functional.nnwarmnnhile the swarm testnet has migrated to new hardware, the team is busy churning out the new features for our  roadmap planned for after etropolis. he team has been working on a devpp network simulation and testing framework for the past nine months, and the module is now ready to merge to go-ethereum.  (bzz whispered), our new node-to-node messaging protocol, now fully incorporates whisper’s encryption module and supports remote peer sessions with iffie-elmann key echange for udp-like protocols. he biggest component of our forthcoming release is the complete rewrite of the swarm network layer. s part of this endeavor, the connectivity (kademlia overlay topology) and the discovery (topology bootstrapping) components are ready to merge.nnhe final missing piece for a proper dropbo backend (to complement  and ) isnnchunk-level encryption for privacy. e came up with an elegant solution the eccak-eistel blockcypher, which will be included in .nnhe team has started working on the third orange paper describing generalised swap, swear and swindle games (courtroom contract suite) to drive decentralised services by providing scalable payment, incentivisation and service guarantees. ideos of talks from the erlin warm ummit in une are available on the summit website on swarmnnhttp//swarm-gateways.net/bzz/summit.ethersphere.eth/nn.nnhispernnersion  released.nnroposal for version  discussion in progress (#).nnwasmnnwasm itself is close to finished in its current form. ork onnnerann, an implementation of wasm that is compatible with the   using in thereum ++, is being resumed since - interfaces matured significantly.nnthereumnnssues with handling large numbersnnandnncertainnnedgenncasesnnhave been identified and fied. mplementation ofnnyzantium changesnnis ongoing. he most challenging area is the elliptic curve pairing precompiles. o support these precompiles, we will usenncash’s ust implementation compiled to asm.jsnn. here is also work being done to support thennnew tracing formatnnandnnoptimise the nnfor speednn.nnthereumnn team of two developers has started working on bringing thereum up to compatibility with yzantium in preparation for the first etropolisnnhard fork.nnyethereumnnome bug fies have been made as well as updated to related libraries (eg.nnrlp.he_decodennandnnrlp.he_encodennin pyrlp). etropolis s are essentially implemented, and yzantium state and block test compliance are continuing to improve.nny-nny- is annnewnnimplementation of the  written in python. he library is heavily influenced by the eisting yethereum library, with the key difference beingnna more modular architecture.nnecent development includesnnpansion of the test suite beyond the -fiture based tests.nnmplementation of  for rules.nnmplementation of the  ork rules.nnupport for pluggable  signing backends.nnupport for pluggable database backends.nneb.pynnecent improvements to the library includennewnniddleware nn.nnug fies related to string encodings.nnetter error messaging for contract calls against non-eistent contracts.nnalidation of contract .nnalidation of  checksummed addresses.nnecuritynne have received numerous bug bounty submissions, and have awarded uno m with  points for a ist-vulnerability.  olidity-bug regarding ececover has been patched (seennhttps//github.com/ethereum/solidity/releases/tag/v..nn).nne are continuing to improving testing, using ive and as well as fuzzing the various raw s, with internal state inspection after each opcode. ee esting (below).nnew opcodes and precompiles in etropolis are being benchmarked for finalization of gas costs.nnestingnne made a number of infrastructure improvementsnneneral lockchain tests eecute blockchain test cases on all fork rules.nneneral tate ests are convertible into blockchain tests in order to run on hive.nnlockchain tests can now be generated % faster.nnork in progress includesnnhe consensus test suitennethereum/testsnnis almost up-to-date with the etropolis s. nly the two most recent changes remain to be applied (# preventing overwriting contract/contract collision and # etropolis difficulty bomb).nnest format validator is finding many mistakes in json tests files, gradually applying looser rules to stricter rules.nne are also eploring more advanced techniques and closer collaboration with the communitynnuzz tests research has progressed.nnandom test generation in progress is already discovering issues between clients.nnhe test contributor program has resulted in community contribution to the tests repository.nnipernnipernnhas seen substantial progress over the last month and a half, and contributions from outside contributors are increasing. ew security features such as payable and internal modifiers have been added, along with more tests, and the language now also has support for accepting and returning fied-size lists as inputs and outputs.nnee thennhttps//github.com/ethereum/viper/blob/master/.mdnnandnncommit historynnfor a changelog.nnamboonnamboonnis a programming language for thereum contracts.  t the end of uly, the first release of amboo became available in the aml package managernnopam install bamboonn.  amboo is now capable of implementing a simple payment channel and an  token. oreover, a few contributors have started working on both enhancements and as well as documentation.nnth-sabellennth-sabellennspecifies the thereum irtual achine for theorem provers such as sabelle/ and oq. he project received substantive pull-requests.nneparation logic tacticsnnfrom seed shortens many proofs by half.nnhe proof that a non-owner cannot harm a walletnnis more structured than ever.nnn independent  interpreternnby mrsmkl serves as an eecutable specification of  (an intermediate language in the olidity compiler). t would be fruitful tonntest this interpreter against the implementationnn. his interpreter can also be used as a basis for a proven-correct compiler from  to .nnor testing eth-isabelle with lockchainests,  recover was needed in aml, so pirapira made anncontributionnn.nnellow apernnhennpull-requests for etropolisnnare up-to-date although the pull-requests need to be classified into two phases yzantium and onstantinople.
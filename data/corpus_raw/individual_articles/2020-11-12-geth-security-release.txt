Titre: Geth security release\nAuteur: Geth team\nDate: November 12, 2020\nURL: https://blog.ethereum.org/2020/11/12/geth-security-release\nCatégorie: Non catégorisé\n\n==================================================\n\nummarynnersions ofnngethnnbuilt with onn..nnornn..nnare most likely affected by a critical o-related security vulnerability. he golang team has registered this flaw as '--'.nne recommend all users to rebuild (ideallynnv..nn) with onn..nnornn..nn, to avoid node crashes. lternatively, if you are running binaries distributed via one of our official channels, we're going to releasennv..nnourselves built with onn..nn.nnocker images will most probably be out of date due to a missing base image, but you can check the release notes on how to temporarily build one with onn..nn. lease runnngeth versionnnto verify the o version your binary was built with.nnackgroundnnn early ctober, go-ethereum enrolled into oogle'snn-uzznnprogram. e had previosly eecuted fuzzers on an ad-hoc basis and tested some different platforms.nnn --, we were notified that one of our fuzzers had found a crash.nnpon investigation, it turned out that the root cause of the issue was a bug in the standard libraries of o, and the issue was reported upstream.nnpecial thanks tonndam orczynskinnof da ogics for the initial integration of go-ethereum into -uzz!nnmpactnnhe o issue can be used to crash all eth nodes during block processing, the effects of which would be that a major part of the thereum network went offline.nnutside of o-thereum, the issue is most likely relevant for all forks of eth (such as urboeth or 's core-geth). or an even wider contet, we would refer to upstream, as the o-team have performed an investigation of potentially affected parties.nnimelinenn-- rash report from -fuzznn-- nvestigation found that it was due to flaw in o. etails sent tonnsecuritygolang.orgnn-- cknowledgement from upstream, investigation ongoingnn-- -- -- otential fies discussed, upstream investigation of potentially affected partiesnn-- pstream tentatively scheduled fi-release for --nn-- pstream pre-announced the security releasennhttps//groups.google.com/g/golang-announce/c/kaeupqh/m/_nn-- otified users about the upcoming release via the official eth twitternnaccountnn, our official iscord-channel andnnedditnn.nn-- ew o version were released, and newnngethnnbinaries were releasednndditional issuesnnining flawnnnother security issue was brought to our attention viannthis nn, containing a fi to the ethash algorithm.nnhe mining flaw could cause miners to erroneously calculate o in an upcoming epoch. his happened on the  chain on --. t appears that this would be an issue for  mainnet around blocknnnn/ epochnnnn, which will occur early anuary .nnhis issue is also fied as ofnn..nn. his issue is relevant only for miners, non-mining nodes are unaffected.nneth shallow copy bugnnffectednn..nn-nn..nniednn..nnype onsensus vulnerabilitynnn --, ohn oungseok ang (oftware latform ab) reported a consensus vulnerability in eth.nneth's pre-compilednndataopy(...)nncontract did a shallow copy on invocation, whereas arity's did a deep copy. n attacker could deploy a contract thatnnwritesnnnnto an  memory regionnnnn,nncallsnn..nnwithnnnnas an argument,nnoverwritesnnnntonnnn,nnand finally invokes thennnnopcode.nnhen this contract is invoked, arity would pushnnnnon the  stack, whereas eth would pushnnnn.nnonsequencesnnhis was eploited on thereum ainnet at blocknnnn, transactionnnffnn. odesnnv..nnwere dropped off the network, causing ~ blocks to be lost on a sidechain. t also caused nfura to drop off, which caused problems for a lot of people and services who were depending on nfura as a backend provider.nnore contet can be found innnthe eth post-mortemnnandnnnfura post-mortemnnandnnherenn.nno innn.nnandnn.nnffectednnv..nn,nnv..nniednnv..nnype o vulnerability during block processingnn o vulnerability was found, and fied innnv..nn. e have chosen to not publish the details at this point in time.nnecommendationsnnn the short term, we recommend that all users upgrade tonngethnnversionnnv..nn(which should be built with onn..nn) immediately. fficial releases can be foundnnherenn.nnf you are using eth via ocker, there could be a few problems. f you are usingnnethereum/client-gonn, there are two things to be aware ofnnhere might be a delay before the new image appears on docker hub.nnnless the o base images have been created quickly enough, there's a chance that they become built with annvulnerablennversion of o.nnf you are building docker images yourself, (vianndocker build .nnfrom the repository root), then the second issue might be cause problems for you aswell.nno be careful to ensure that onn..nnis used as the base image.nnn the long term, we recommend that users and miners look into alternative clients too. t is our strong feeling that the resilience of the thereum network should not depend on any single client implementation.
here isnnesunn,nnethermindnn,nnpenthereumnnandnnurboethnnand others to choose from aswell.nnlease report security vulnerabilities either viannhttps//bounty.ethereum.orgnn, or viannbountyethereum.orgnnor viannsecurityethereum.orgnn.
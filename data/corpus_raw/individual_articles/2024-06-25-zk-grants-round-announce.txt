Titre: ZK Grants Round Announcement\nAuteur: Rodrigo Vasquez\nDate: June 25, 2024\nURL: https://blog.ethereum.org/2024/06/25/zk-grants-round-announce\nCatégorie: Non catégorisé\n\n==================================================\n\nhe thereum oundation, along withnnztecnn,nnolygonnn,nncrollnn,nnaikonn,nnzkyncnn, announces the  winners of the collaborativenn grant roundnn. ach sponsor contributed ,  to the shared pool of , . he winners were selected through a rank-choice vote after thorough reviews.nnhe selected projects cover a range of approaches to advancing zero-knowledge proofs. hese include developing security frameworks, analyzing cryptographic schemes, creating benchmarking tools for performance and scalability, and integrating advanced cryptographic models into practical applications which will benefit the whole  ecosystem. he projects aim to enhance the efficiency, security, and applicability of zero-knowledge proofs across different domains.nnhe grantees include researchers and developers from various organizations and universities, working on both theoretical advancements and practical implementations to address key challenges in the field. e look forward to the contributions of these projects, anticipating advancements that will benefit the thereum ecosystem and the field of cryptography.nnamennrganizationnnrojectnnescriptionnnmit umarnnew ork niversitynnroof arrying ata from folding  with protostarnnurrent nteractive erifiable omputation () schemes face challenges with the itness-ulti-calar ultiplication (itness-) barrier, limiting efficiency. e propose leveraging the oldwasser-alai-othblum () accumulation scheme to significantly reduce the witness size, overcoming these limitations. tilizing the rotostar compiler, we will fold the  protocol, enhancing computational efficiency. urthermore, we aim to etend  into a roof arrying ata framework, facilitating parallel folding in a tree structure to streamline verification processes and improve scalability.nnratyush ishrannniversity of ennsylvaniannandnntanford niversitynnippel  language and compiler for building proof systemsnne propose ippel, a new language and compiler for building correct and efficient succinct proof systems.  ippel allows the developer to epress the protocol in a high-level language that is close to its mathematical description, and then automatically manages low-level details like parallelism, memory management, use of custom hardware, etc.  ippel's compiler also has powerful and fast static analyses that can help developers catch protocol soundness and zero-knowledge bugs.  ur hope is that ippel will make it easier for developers to implement and eperiment with new proof systems without sacrificing performance.nnulian utherlandnnethermindnnean traction of ircuit onstraints from alonnhe alo library is a widely used  infrastructure library that provides a means to develop prover/verifier pairs in a high-level domain specific language embedded in ust. o formally verify circuits in this language, and thus ensure the highest level of security, we are aiming to develop a formal verification harness to seamlessly etract the constraints from a alo circuit and reason about them in the ean  proof assistant. e already have significant progress towards and wish to etend it to support the full gamut of alo features.nnordan oppardnnndependentnn enchmarksnnerformance benchmarking (prover time, verifier time, proof gate size) for different types of proving systems as well as the prover/verifier implementations of those proving systems over various computer architectures (_, ).  o create an understandable (i.e. not just a dump of test data) and accessible repository of benchmarks surrounding the  ecosystem such that developers, project managers, and the general public can make informed decisions regarding their requirements, or simply learn more about the current landscape (e.g. performance going up/down, new proving systems etc).nntanislav arycevnnzkoldnnold ymbolic a ero-nowledge mart ontract anguagennzkold ymbolic is the programming language for writing zero-knowledge smart contracts. t is a high-level functional language, a subset of askell. mart contracts written in zkold ymbolic are compiled directly into arithmetic circuits that can be utilized by various zero-knowledge protocols.  eing a high-level language, it dramatically reduces the barrier to entry as the developers do not need to be eperts in  cryptography.  roviding smart contract developers with a proper tool to tap into the power of zero-knowledge protocols enables them to create zk-apps and smart contracts that are on another level in terms of efficiency and user eperience. oreover, with more developers adopting this approach, we are reducing the on-chain data and computation footprint, effectively scaling thereum and  chains.nnordan oppardnnndependentnn reesitternngnostic treesitter grammars for major zero-knowledge circuits languages oir (ztec) and airo (tarkware) which are maintained over time.  o improve developer tooling as well as provide broader access to tools such that developers can pick what is best for them. - ditor-agnostic treesitter grammars for oir and airo. - aintenance of these grammars as said languages evolve over time. - omplete and easy to understand documentation such that anyone can contribute to these grammars when they are released or use them as well-structured bases for other treesitter grammars.nnergey aunovnnndependentnnasm nnhis project aims to make the secure/cryptographic  scheme implementation more accessible in environments outside of the ust ecosystem. he primary objective is to increase the adoption of the scheme by minimizing the divergence of the asm release from the default target and providing a downstream-friendly . he project's successful adoption will lead to enhanced privacy, simplified identity management, anonymous moderation, proof of solvency, versatile applications, and encouragement of user adoption in the thereum ecosystem.nnako emannndependentnnnboard users to verifiable nne want to bring developers to  by showcasing how the usual tools interplay.  enthusiasts want to answer two questions before building an app what problem can we solve with it and how to build such an app ur project aims at answering both questions by creating an open-source end-to-end app on verifiable . e think that private  is a requirement for a widespread adoption of blockchains. nd we want to show how  can bring this.  e want to build a simple yet powerful boilerplate for verifiable , based on oir language. e plan to build an end-to-end app, with proving, verifying on-chain and on the client side. e want to allow any new developer to launch the app with one command. e’ll call it a success if the project is forked and edited by developers willing to learn more about . e plan to write blog posts and onboarding guides to widen the eposure of the project.nnlbert arretannethermindnnatticeold implementation and folding schemes for -based snnhis grant proposal aims to develop and implement a roof of oncept (o) for the atticeold folding scheme ], benchmarking it against eisting schemes like yperova. dditionally, we aim to research methodologies to create a "-friendly" folding scheme based on atticeold. his would allow to use folding techniques in the contet of -based s (e.g., eth, lonky/, isc ero, oojum, etc.)  rof. an oneh and rof. inyi hen, authors of the atticeold paper, have agreed to assist our team for the project's duration.nnlbert arretannethermindnns for non-prime arithmeticsnnhis grant proposal seeks to develop a  tailored for proving statements over rings of the form /n, for  the ring of integers and n an arbitrary integer. his deviates from the usual setting where statements are epressed over a prime field _p/p for p a prime. e aim to focus on the cases where n is a power of  or a product of two large primes. his would enable to natively prove statements involving computations such as -based cryptography operations,  operations, floating point arithmetic (required for, e.g., machine learning), non-algebraic hash functions, etc. ere, by “natively,” we mean that each of these computations is arithmetized over/n, for n an appropriate integer, rather than over a finite field. t is known that the latter “non-native” arithmetization can create overheads of an order of magnitude in the circuit// size.nntefanos haliasosnnndependentnneproducible  ulnerabilities to mprove cosystem’s ecuritynnero-knowledge proofs (s), particularly s (uccinct on-nteractive rgument of nowledge), have transitioned from theoretical constructs to practical, real-world applications, offering privacy and verifiability. owever, the compleity of designing and implementing  applications introduces a myriad of vulnerabilities.  ecent analyses have shed light on the unique challenges and vulnerabilities at both the circuit level and integration level within the  stack, posing significant threats to  systems. espite advancements in automated security defenses, their effectiveness remains largely untested on etensive, real-world datasets. oreover, the scarcity of reproducible eamples lessens practitioners’ and researchers' ability to understand and mitigate  vulnerabilities effectively.  his project aims to etend our previous work on  security by developing a comprehensive dataset and framework featuring reproducible  eploits. his resource will serve as both an educational tool for newcomers and a detailed study base for eperts. dditionally, we will evaluate the effectiveness of eisting security tools against this dataset to pinpoint areas needing improvement, ultimately aiding in the development of more robust detection tools.nntefanos haliasosnnndependentnnetecting rivate nformation eakage in ero-nowledge pplicationsnnractical ero-nowledge proofs became possible due to the advancement of privacy-preserving projects such as cash. otably, in the last few years, most -enabled projects have focused on verifiable computation,  with zk-rollups being a notable application. istorically, crafting  applications has been a challenging task, necessitating epertise in libsnark and low-level programming. he emergence of more accessible s like ircom and arkworks, while mitigating some compleity, still leaves room for critical bugs, such as under-constrained vulnerabilities ]. ecent advancements in  programming languages, such as oir and eo, aim to simplify  application development and reduce potential vulnerabilities, attracting a broader developer base potentially unfamiliar with cryptographic fundamentals.   prevalent issue in these high-level languages, which is also common in lower-level languages, is the leakage of private variable information. or instance, such a leakage happens when a  program publicly outputs the sum (nnznn) of a private and a public variable (nnnnandnnynn, respectively). nowing the public inputnnnnand the public outputnnznnenables the deduction of the value of the private variablennynn. onversely, hashing the sum ofnnnnandnnynninto a public variablennznndoes not leak the value of the private variablennynn, assuming the hash function's security. his project proposes the design and implementation of a static analysis approach enhanced with taint tracking, input generation, and  solving to identify and validate instances of private variable information leakage. ur approach generates () warnings for potential leaks, () errors for confirmed leaks, and () visual graphs tracing private value propagation to public outputs for debugging purposes. ur plan is to apply our approach to oir, and subsequently to other  s like eo.nnatrick tilesnnndependentnnetal ackend for cicle nnupporting pple's  series  in cicle by creating a etal hader anguage backend for cicle  using would epose gpu performance benefits to all developers in the zk ecosystem that have an pple device with a  series chip. evelopers with only a acbook would receive similar gpu performance benefits without needing access to vidia  devices. hese performance benefits would also have a high impact on projects whose data is airgapped or cannot leave the host device such as client side proving applications.nnaylord arnernn acknn hiteboard essions eason nn hiteboard essions is a series of educational videos focused on the building blocks of . t takes the form of a mini course, followed by video interviews with top zk-practitioners, learning together and sharing their knowledge on a whiteboard.  eason  was released in , produced by  ack in collaboration with olygon. t consists of  videos and featured speakers such as an oneh from tanford niversity, ustin rake, ary aller, arry hitehat from thereum oundation, and many more. he hosts were rendan armer from olygon ero and obbin hreadbare from olygon iden.   hiteboard essions eason  will cover more of the building blocks of , providing up-to-date foundational knowledge for researchers and builders new to  with  new modules, produced by  ack once again.nnenhao angnnale niversitynnirrus erformant and obust istributed  eneration via omputation elegationnne propose to design and develop irrus, a new protocol for performant and robust distributed  proof generation eploiting the idea of computation delegation. he applications are ubiquitous, including -ollups, zks, and any  applications involving large circuits. hile eisting distributed  proof generation schemes improve efficiency and scalability by distributing the work- load across multiple machines, they have non-optimal prover time, communication costs, proof size, and verifier time. hey are also not attack-proof when malicious nodes eist in the distributed  generation process. ur protocol will achieve significant improvement, with linear prover time, constant communication cost per prover, and robustness to malicious provers, addressing the current bottleneck in eisting systems.nnergio houhynnry & anasnnlonky backend for nne will epand the rithmetic ircuit ntermediate epresentation () ecosystem by building an open-source rithmetic ircuit irtual achine () backend for the lonky prover. his will enable users of -compatible s to leverage lonky advantages and it will allow lonky circuit builders to enjoy s abstraction & tooling (eg oir debugger). e envision that during development, valuable insights regarding  suitability as a widespread standard - and even potential improvements to it - will arise.nnaul unnndependentnnookups comparison table (speed, memory, preprocessing) univariate + multilinearnne aim to develop a comprehensive comparison table that focuses on the performance (including speed, memory usage, and preprocessing requirements) of various lookup arguments like pylookup, aulk, aloo, , asso, and og+. his table will compare both univariate and multilinear polynomial commitment-based lookup arguments. he project's primary objective is to benchmark these lookup arguments to assist developers in choosing the most suitable solutions for production environments. his entails implementing the lookup arguments mentioned, creating a benchmark table, and writing a detailed blog post highlighting the key distinctions and performance metrics of these lookup arguments.  he outcomes of this project are significant for the thereum ecosystem. t will enhance decision-making for ayer  solutions by providing detailed comparisons of lookup arguments, facilitate the translation of theoretical protocols into production-level code, and serve as an educational resource for new researchers. he project team comprises arry iu, u-ing su, ing-ie ang, and aul u, each contributing significant hours per month to the project.  he project will be conducted in phases, with the methodology including the implementation of lookup arguments using ython, optimization of these arguments according to the original papers, and benchmarking their speed and memory usage. he team will publish a table and diagram to compare these metrics accurately across consistent hardware settings. olynomial commitment schemes will be implemented as described in the original papers or based on educational assumptions in cases where the original research lacks detailed protocol specifications.nngor ulamovnnerooolnninimal fully recursive zk rollup with sharded storagennurrent rollups publish blocks in their entirety on ayer , which is epensive, limits scalability, and prevents true recursion. ublishing a rollup's blocks on another rollup is not working, because anyway, the data will float up to ayer . e propose a novel rollup architecture that uses zero-knowledge proofs for data availability, sharded storage, and eecution. ll proofs are combined into a single succinct proof, enabling efficient verification and unlocking infinite recursion - rollups can be deployed on top of other rollups without limitations. his breakthrough design paves the way for transforming eb into eb and achieving the scalability endgame.  espite advantages in security and scalability, zk rollups currently lag behind optimistic rollups in adoption due to historical reasons. his approach is not available to optimistic rollups, as they cannot generate succinct universal proofs. ur approach allows  rollups to overtake their competitors.nnrtem rigornnndependentnn-- ntegrationnnhis project aims to enhance the eisting i toolkit for ero-nowledge roofs () deevelopment. pecifically, the project aims to add support to the mopro library for an very common proving system -nnalonn. dditionally, the project will use the achieved integration to port the state-of-the-art ero-nowledge achine earning () library, , to i devices. hese both integrations would benefit a wider community and unlock more sophisticated  applications directly on mobile devices, thereby epanding the possibilities for data privacy and secure computing on edge devices.nnhao annnarkifynniriusnnhis project introduces ycleold to irius the open-source lonkish olding ramework for ncrementally erifiable omputation (). ycleold is a new approach to instantiate folding-scheme-based recursive arguments over a cycle of elliptic curves published in ugust . ycleold has the potential to enhance folding performance by around  through minimizing the responsibility of the secondary circuit and reducing the number of ignt operations. n particular, irius previously defines its primary and secondary  circuits symmetrically with ycleold, the primary circuit bears the main functionality, while the  operations are delegated to the secondary circuit.nnanze uonn cience oundationnnenchmarking -circuits cross ultiple s/s evelopment rameworksnns, represented by  ayer  in modern cryptography applications, offer a rich technical stack, especially with  and s. owever, due to the continuous emergence of new tools and libraries for development, along with the inherent diversity and compleity, proposing an intuitive and comprehensive benchmark framework for testing and evaluating various methods' pros and cons remains a challenge. espite current research covering comprehensive benchmarks of multi-layered  environments, including arithmetic, elliptic curve, and circuit levels, there are still deficiencies in two dimensions () nclusion of the latest and most comprehensive  development frameworks () ich, reusable, standard testing circuits.  herefore, we aim to () comprehensively collect and organize the development tools used in popular  ayer  projects () modularly compile and integrate common algorithms in the cryptography domain, including various hash functions, digital signatures, etc., to construct testing circuits in different development environments () based on the aforementioned unit testing circuits, comprehensively evaluate popular  development tools across different parameters such as curves, hardware, etc., including runtime, proof size,  () build integrated testing circuits to further estimate relevant metrics of comple systems and the estimated cost consumption for deployment on specific blockchain networks.nnu uonn abs.nnandnnhe ong ong olytechnic niversitynnomparison of ultilinear olynomial ommitment chemesnn polynomial commitment scheme is a powerful cryptographic tool that enables a prover to commit a polynomial to a succinct value, and later allows a verifier to confirm claimed evaluations of the committed polynomial. ultilinear polynomial commitment schemes are critical in many applications such as s (succinct non-interactive argument of knowledge) and lookup arguments. here have been numerous constructions of multilinear polynomial commitments that ehibit ecellent performance in various aspects. owever, there is a lack of benchmark comparisons for these methods.  n this project, we aim to provide a comprehensive comparison of different multilinear polynomial commitment schemes, including their efficiency, security assumptions, the cost of supporting zero-knowledge prosperity, batching performance, etc. ur findings can offer clear guidance for developers in selecting the appropriate multilinear polynomial commitment for different scenarios.nnirror angnnalusnn ecurity framework for zks development and auditnnhis project aims to develop a comprehensive zks security framework for the thereum community, culminating in a research paper. t focuses on analyzing zk security vulnerabilities, such as ayer  scaling and blockchain compression, with the goal of creating an open-source vulnerability database. he framework will provide developers with theoretical support and practical guidance, including circuit implementation, protocol design, and cryptographic primitives. utcomes include the development of an open-source security framework, dissemination of technical documents and tutorials, and enhancements to the security infrastructure and applications of zk technology, ultimately contributing to the robustness and security standards of the thereum ecosystem.
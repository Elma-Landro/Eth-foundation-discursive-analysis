Titre: Finalized no. 33\nAuteur: Danny Ryan\nDate: January 31, 2022\nURL: https://blog.ethereum.org/2022/01/31/finalized-no-33\nCatégorie: Non catégorisé\n\n==================================================\n\ntldrnnerge progress -- minor spec updates, engineering full steam ahead 🚂nno progress in client diversity. e selfish, run a minority client!nnerge updatennirst of all -- fantastic work to all of the engineering teams on the intsugi sprint, which culminated in the launch of the intsugi erge testnet. t is incredible to see  eecution clients and  consensus clients for a total ofnnnndifferent pairings operating on a unified front.nnintsugi🍵nn, the first long-standing erge testnet, was not without ecitement. henn#estingheergenneffort hammered the testnet with transactions, bad blocks, and a number of other chaotic inputs, bubbling up some bugs in state transition, sync, and more. e epect to find such bugs in early testnets, but with each iteration, clients become more and more stable.nniln reboot 🔥🧱nneams identified an important issue a few weeks ago. his was a mismatch in thennengine nn(how the o consensus-layer drives the eecution-layer) semantics related to how eecution-layer clients actually function in practice. he tldr is that, in some contets, the consensus-layer was accidentally inducing unepected load on the eecution-layer.nnngineers then realized that if the engine  semantics were slightly more fleible, the two layers could work more harmoniously. his led to a subtle, yet critical, modification of thennengine nnand a relatednnbreakingnnspec release.nnoday, thenniln spec🔥🧱nnwas released, and engineers are busy knocking out the changes. t the end of this sprint, teams aim to bring production-ready implementations to a new testnet for public consumption. eep your eyes peeled for how to participate.nnrom there, teams will transition public testnets to proof-of-stake before making mainnet preparations.nnlient diversity metricsnnichael proul released a new wave ofnnclient diversity metricsnnusing his novel fingerprinting mechanism. adly, the client distribution of validating nodes has not budged in the past  months.nnhe diversity of consensus-layer client implementations enables thereum and its users to have a unique and robust resilience to software failures and attacks. sers achieve some resiliance by using a minority client regardless of the network makeup, but the network itself gains resiliance at a few key validator distribution thresholds.nnf a single clientnnnnoes not eceed .%, a fault/bug in a single clientnncannot be finalizednnoes not eceed %, a fault/bug in a single client's forkchoicenncannot dominate the head of the chainnnoes not eceed .%, a fault/bug in a single clientnncannot disrupt finalitynnrom the looks of the fingerprinting mechanism, rysm still sits above the .% mark.nn want to give a huge shoutout to the teams, individuals, and communities taking client diversity seriously (nnehibit nn,nnehibit nn). unning a minority client is not only healthy for the network but is also safer for the individual user's funds.nne selfish (rational)! un a minority client 🚀
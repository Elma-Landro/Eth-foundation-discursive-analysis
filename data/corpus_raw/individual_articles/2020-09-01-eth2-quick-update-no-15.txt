Titre: eth2 quick update no. 15\nAuteur: Danny Ryan\nDate: September 1, 2020\nURL: https://blog.ethereum.org/2020/09/01/eth2-quick-update-no-15\nCatÃ©gorie: Non catÃ©gorisÃ©\n\n==================================================\n\narmer minds his cropsnnn optimistic outlooknnhe fields are aflamenntldrnnedalla chugging along smoothlynnlient diversity is a mustnneth+eth (hase . aka he erge)nnend-to-end demonnesting and audits continue as we approach hase  launchnnedalla looking good (after some fun)nn quiet testnet is a suspicious testnet.nnf you've followed edalla at all in the past few weeks, you'll be very aware of the major -day incident that occured on riday, ugust th. heck out rysm'snnpost-mortemnnfor details on the technicals and timeline, and en's recent blog posts (nnnn]nnnn]) for a high-level analysis. lient teams worked through the weekend following the incident, deploying sync and peering patches to resolve the highly fragmented network.nnhile the incident induced incredible stressors on the testnet, it gave all clients a chance to harden themselves against some of the wildest of scenarios.  can honestly say that client software isnnmuchnnmore robust following this incident. 'll actually sleep a little bit better now leading up to eth mainnet launch.nnince the incident, edalla has chugged along quite smoothly now with k active validators and another k in the activation queue (that's  days worth)!nnlient diversity is a mustnnhile there are manynnecellent, viable, robust, usable, etc]nneth clients under active development, the network is currently dominated by a single client -- rysm.nnhere is good historical reason for this -- rysm has prioritized early testnets, community engagement, and usability fornnwell over a year nownn. udos to the rysmatic team. ommunity building is simultaneously incredibly difficult as well as crucial to our industry and open source at large.nnhat said, the incident on edalla was significantly amplified by the failure of the dominant rysm client, and as we move toward mainnet, we, as a community,nnmustnnconsciously seek to remedy this. s someone who has tried all the eth clients on edalla,  can tell you first-hand that most clients are robust and well documented, andnnallnnclient teams are actively engaged on discord and github to help you work through any issues you may run into.nnrotect yourselfnnlient diversity not only makes the eth consensus more robust, but also helps protect you in etreme scenarios due to the anti-correlation incentives found in eth, the more your negative behaviour is correlated with that of others, the more you more you stand lose.nnor eample, suppose % of the network goes offline for multiple days due an outage in client-, but client- and client- remain stable and online. lthough the chain will continue to be built by  and , the chain will not finalize due to the % outage. f you run client-, you stand to lose annnincreasingnnamount each epoch that the finality outage continues (we call this an "inactivity leak"). hereas if you run client- or , your balance is protected since you remain online. ote -- an inacivity leak isnnmuchnnworse than normal offline penalties.]nnuppose that instead a minority client- (with % of the network) eperiences a critical error causing a client wide outage. n this case, the chain can continue to finalize (since % of the network are still participating). here is no "inactivity leak" incurred by the offline validators, only normal penalties. o those running client-, only receive minor penalties compared to the first scenario above.nnlients making it easy to swapnnn addition to the community efforts to try new clients, client teams are working hard to ensure that switching clients is bothnneasynnandnnsafenn. ith the addition of a fewnncross-client standardsnn, you'll soon be able to hop from one client to another with minimal downtime and no risk of accidental slashing.nnuch standards, which prevent client lock-in, are a critical component to a robust eth network. ase of changing software will enable the community to more quickly resolve issues (like the edalla incident) if/when a single client fails.nneth+eth end-to-end demonnne of the primary goals of eth is to reach hase . (aka he erge), at which point the eisting thereum chain's consensus will be integrated into eth. rom there on, the chain we know and love will be built by proof-of-stake validators instead of the current energy hungry proof-of-work consensus.nnhe transition to hase . is designed to be as seamless as possible to eisting users and applications. th clients remain the work horses for state, transactions, and eecution. y leaving the vast majority of this user layer untouched, thereum will be able to leverage eisting tools and s to power transactions and dapps, just like they do today.nno this end, ikhail () and uillaume (geth) recently released annnend-to-end demonnof a multi-sharded beacon chain (with an eth chain as one of those shards). n the video of the demo released, ikhail sends a number of transactions to the eth shard chain using annnunmodifiednnmetamask wallet.nnou can check out and play with anndockerized versionnnof the eth+eth demo, or if you prefer to go a bit deeper, you can build and runnnfrom sourcenn.nnontinued testing and audits, eyeballing hase  mainnetnnusiness as usual on this front.nnlient teams are working their asses off, auditors are digging into every nook and cranny, and preparations are being made for mainnet launch ðŸš€
Titre: Pectra Mainnet Announcement\nAuteur: Protocol Support Team\nDate: April 23, 2025\nURL: https://blog.ethereum.org/2025/04/23/pectra-mainnet\nCatégorie: Non catégorisé\n\n==================================================\n\nhe ectra network upgrade is scheduled to activate on the thereum mainnet on ay ,  at epochnnnn( )! ainnet client releases are listednnbelownn.nnectra verviewnnectra follows last year'snnencun upgradenn. t introduces features to augment thereum accounts, improve the validator eperience, support  scaling and more!nnhis post eplores these three major improvements in detail. or a more comprehensive overview, seennethereum.org's guide to the upgradenn.nnrom s to mart ccountsnn-nnrepresents a major step toward widespread account abstraction, enabling users to enhance their ternally wned ccounts (nnsnn) with smart contract functionality.nnhis hybrid approach combines the simplicity of s with the programmability of contract-based accounts. n practice, it enables wallets to supportnnransaction batchingnn, where multiple operations eecute atomically within a single transaction. o more separate transactions for "approve" and "swap"!nnas sponsorshipnn, which allows others to pay for transaction fees. his is especially useful when wanting to transact from an account that doesn't have  in it.nnlternative authenticationnn, which means manynnhardware security modulesnn(s) in phones today can be used to authorize operations for the account via technologies likennpasskeysnn.nnpending controlsnn, which can limit how many tokens a specific application can spend, or cap daily outflows from a wallet, improving security.nnecovery mechanismsnn, which provide different options for users to safeguard their assets, without migrating to a new account.nno use -, an  signs an authorization pointing to a specific delegation address whose code it wants to eecute. nce set, the account gains the new code’s capabilities (e.g., batching, sponsorship, authentication logic, etc.). ecause choosing a delegation target hands over a great deal of control, - enforces several safety checksnnhain-specific delegationsnn by default, a delegation is only valid on a specific chain , preventing the same authorization from being used on different networks.nnonce-bound delegationsnn authorizations can be tied to the account's current nonce, automatically invalidating them once the nonce increases.nnevocabilitynn the owner of the  can always create another - authorization that revokes or replaces the eisting delegation code, preventing a permanent lock-in if something goes wrong.nnor best practice on using -, seennthis pagenn.nnalidator  mprovementsnnhree new s within ectra improve the validator eperiencennnn,nnnnandnnnn.nnhe first, -, raises the maimum balance a validator can receive rewards on from   to  , through an opt-in update of withdrawal credential type.nnor stakers, this enables reward compounding. reviously, any rewards earned beyond a validator's   deposit would not count towards their active stake. takers who wanted to stake more than   could only do so in fied   increments, relying on staking pools for anything in between. ith -, both eisting and new validators can be configured to earn rewards on every  staked, up to   per validator.nnhis  also allows larger operators to consolidate multiple validators, by merging multiple   validators. his reduces the bandwidth requirement for the network as a whole. o understand the mechanics in detail, seennthis pagenn.nn- also etends validators' abilities, this time by introducing eecution layer triggerable withdrawals. rior to this , only a validator's active signing key could trigger an eit. ow, if an thereum address is set as a withdrawal credential, that too can force an eit. his reduces trust assumptions in delegation settings, as the owner of the funds -- be they a human in control of an  or a -managed smart contract -- can always trustlessly initiate an eit.nnastly, - removes a lingering vestige of pre-merge thereum the delay between validator deposits and their addition to the deposit queue. re-merge, the eacon hain had to wait  blocks before processing validator deposits to account for potential proof-of-work re-orgs. his is no longer necessary!nnith -, deposit processing delays now drop from around  hours to roughly  minutes. eku engineers ucas aldanha and tefan ratanov covered the details of - and - in theirnnjoint evcon  talknn.nnlob caling .onnhe final major change in ectra is -, which doubles thereum’s blob throughput!nnlobs, introduced in thennencun upgradenn, are ephemeral data storage that s can use to submit compressed transaction data and proofs to thereum . ince going live, they've reduced  fees for s by -, resulting in far cheaper  user transactions.nnhe thereum mainnet currently supports an average of  blobs per block, with a maimum of  to accommodate periods of high demand. ith -, these numbers will increase to an average of  and maimum of .nnnlikennnn, which nodes store indefinitely, blobs are pruned from the network after  epochs (~ days). his bounds the amount of disk space they can use. he binding constraint for blobs is instead bandwidth, as blobs need to be gossiped over thereum's peer-to-peer layer. o offset the bandwidth increase caused by -, ectra also introduces -, which caps the worst-case size of a block.nno continue scaling thereum’s data throughput without a corresponding rise in bandwidth requirements, we must shift from a world where every node stores every blob to one where nodes store only a subset and sample the network to verify the remaining blob data. ood news work to support this is already underway! rancesco from the thereum oundation esearch team outlined this scaling roadmap in hisnnevcon keynotenn.nnectra pecificationsnnhe list of changes introduced in ectra can be found innn-nn. or reference, they arenn- recompile for - curve operationsnn- ave historical block hashes in statenn- upply validator deposits on chainnn- ecution layer triggerable eitsnn- ncrease the __nn- ove committee inde outside ttestationnn- ncrease calldata costnn- eneral purpose eecution layer requestsnn- lob throughput increasenn- et  account codenn- dd blob schedule to  config filesnndditionally, full python specification for the changes to the eecution and consensus layer specifications can be found in the following releasesnnecution layernnv..rcnnonsensus layernnv..-beta.nnastly, ectra also introduces changes to the ngine  used for communication between the consensus and eecution layer nodes. hese are specified in thennprague.mdnnfile of the repository.nnectra ctivationnnhe ectra network upgrade will activate on the thereum mainnet at the start of epochnnnn, happening on ay ,  at  .nnt was previously activated on thennoodinn,nnolesky and epolianntestnets.nnlient eleasesnnhe following client releases are suitable for the ectra upgrade on the thereum mainnet.nnonsensus ayer eleasesnnhen running a validator, both the onsensus ayer eacon ode and alidator lient must be updated.nnamennersionnninknnrandinenn..nnownloadnnighthousenn.. or laternnownloadnnodestarnn..nnownloadnnimbusnn..nn..nnownloadnnrysmnn..  or laternnownloadnnekunn..nnownloadnnotennthe recommended imbus version was changed fromnnv..nntonnv..nnon pril .nnecution ayer eleasesnnamennersionnninknnesunn..nnownloadnnrigonnn..nnownloadnngo-ethereumnn..nnownloadnnethermindnn..nnownloadnnethnn..nnownloadnnnnow do thereum network upgrades worknnthereum network upgrades require eplicit opt-in from node operators on the network. hile client developers come to consensus on what s are included in an upgrade, they are not the ultimate deciders of its adoption.nnor the upgrade to go live, validators and non-staking nodes must manually update their software to support the protocol changes being introduced.nnf they use an thereum client that is not updated to the latest version (listed above), at the fork block, it will disconnect from upgraded peers, leading to a fork on the network. n this scenario, each subset of the network nodes will only stay connected with those who share their (un)upgraded status.nnhile most thereum upgrades are non-contentious and cases leading to forks have been rare, the option for node operators to coordinate on whether to support an upgrade or not is a key feature of thereum's governance.nnor a more ehaustive overview of thereum's governance process, seennthis talk by im eikonn.nns an thereum mainnet user or $ holder, is there anything  need to donnn short, no.nnf you use an echange, digital wallet or hardware wallet you do not need to do anything unless you are informed to take additional steps by your echange or wallet provider.nnf you'd like to watch the upgrade go live, you can join thennonline viewing partynn!nns a non-staking node operator, what do  need to donno be compatible with the upgrade, update your node's eecution and consensus layer clients to the versions listed in the table above.nns a staker, what do  need to donno be compatible with the upgrade, update your node's eecution and consensus layer clients to the versions listed in the table above.nnake sure both your beacon node and validator client are updated.nns an application or tooling developer, what should  donneview the s included in ectra to determine if and how they affect your project --- there are many new eciting features being introduced across both the eecution and consensus layers!nnhy "ectra"nnpgrades to the eecution layer follow evcon city names, and those to the consensus layer use star names. "ectra" is the combination of rague, the location of evcon , and lectra, a blue-white giant star in the constellation of aurus.nnriginal cover image bynnulia oloninann, with modifications bynnomo aitonn.
Titre: Eth2 Interop in Review\nAuteur: Danny Ryan\nDate: September 19, 2019\nURL: https://blog.ethereum.org/2019/09/19/eth2-interop-in-review\nCatégorie: Non catégorisé\n\n==================================================\n\nast week, seven of the eight th clients under active development succeeded in marking the major milestone of moving from single-client to multi-client testnets at the "nterop ock-in". ith this eciting success in th development, we wanted to reflect on how this point was reached and on what it means to the thereum network and ecosystem.nnnyone following thereum over the past couple of years has likely become familiar with terms such as "thereum .", "th", or "erenity". ach of these refer to substantial upgrades slated for the thereum protocol that have been envisioned in some form since before the network went live in .nnn the early years of thereum, groundbreaking research was accomplished in parallel to the original chain (th) launching, while the massive growth of the thereum community that followed aided the initial adoption of decentralized applications. till, the road from these early breakthroughs to a highly decentralized, yet scalable proof-of-stake blockchain has been long. ver the past  months though, research has finally stablized into a cohesive and complete vision for the coming major upgrades known as th.nns research moved into specifications toward the end of ,nnmany teamsnn(client teams) from across the community stepped up to build out core implementations of the protocol (clients). ince then, there has been a dynamic play between specification and implementation.nnort-nightly callsnnand a commonnnspec repositorynnorganize communication and the sharing of ideas, but client teams have primarily worked in relative isolation, building and testing their implementations of the protocol.nnhile the spec was a moving target, clients could only dig so deep into interoperability and optimizations, but once the hase  specification of th was deemednn"frozen"nnon uly , , clients made tremendous progress and began to take concrete steps toward production.nnnteropnnoseph elong fromnnegasysnnhad the crazy idea of gathering members from each of the client engineering teams in a remote location for a week of interoperability work. he event was deemed the "nterop ock-in" or as it was generally referred -- "nterop". ith the spec freeze in sight and ennvnncon on the horizon, nterop in eptember was an opportunity have all of these stakeholders work through initial interop-issues in person.nnhennprimary purposennof the event was to have each participating client to achieve pair-wise interoperability with each other client in small test networks --nnighthouse - rtemisnn,nnodestar - ighthousenn,nnodestar - rtemisnn, etc.nnarticipating client teams includednnrtemisnnighthousennodestarnnarmonynnimbusnnrysmnnrinitynndditional goals involved testing () larger networks in both node count and () validator count, () networks with + clients, () enhancing tooling for monitoring and debugging th networks, and () other fun things like getting raspberry pis running and building fork visualizers.nneading up to the event, some goals seemed like a stretch, but teams worked diligently until the deadline and achieved amazing progress. y the end of the week, client teams far eceeded original epectations of having a few pair-wise networks, instead completing the entire pair-wise tests, building a small network ofnnallnn participating clients, and more.nnhe following represent a glimpse into the highlights of the client successes, but is certainly not ehaustivennulti-client testnetsnnll  participating clients achievednnpair-wise interoperabilitynn, and although an th,nnhaspernn, was not able to be in attendence, they havennbegunnnto work through this milestone as well.nnany larger testnets were formed between + clients, + nodes, and higher than minimal validator counts.nnll  clientsnnin attendence were successfully run on a single network.nnll participating languages' libpp implementations are now interoperable after debugging some minor issues.nnetwork debugging and toolsnnomennconsensus errorsnnbetween clients were identified, debugged, and recorded as portions of the state transition that require increased test coverage.nnommand line tools were built to better debug ssz objects and state transitions (nnzclinn,nnpyclinn, and similar tools embedded within clients).nnrogress made on metrics dashboards, a fork visualizer, and other tools to better understand clients and networksnnlients were packaged up into containers to perform large-scale network tests within thennhiteblocknngenesis platform.nnnd then somennlient teams served as eachother's first alpha users resulting in etensivennbuild/run scriptsnnand related documentation.nnsolated load tests with imbus and ighthouse handled + validators on a single machine paired with similarly full nodes over .nnultiple clients were built and tested on annsmall raspberry pi networknn.nnnd beyondnnnterop marked a major inflection point for th. here is still much work to accomplish before launch, but engineering efforts will increasingly be geared toward testnets, optimizations, and usability -- work that begins to shift this software into the hands of users.nno what's up net for client teams and eth developmentnnenchmarks and optimizationsnnest sync, stress test networks, etcnnublic and incentivized testnetsnnhird party auditsnnolishing the validator user eperiencenninally, we owe a special thank you to thennonsenysnnteam for helping to organize, host and provide resources that made nterop possible.
Titre: Bazaar Services\nAuteur: Gavin Wood\nDate: April 5, 2015\nURL: https://blog.ethereum.org/2015/04/05/bazaar-services\nCatégorie: Non catégorisé\n\n==================================================\n\n'm a great believer in judging the present through the knowledge of the past. n the past  or so years one of the biggest trends in business and technology was what might loosely be termed as the open source revolution. he notion of it beingnngood businessnnto share your source code might not yet be cemented into the eyes of many a traditionalist, however the idea of leveraging eisting open source software is. e are swiftly getting to the point where nearly all important, non-niche software is, one way or another, open. n all ndroid phones, all ac computers, practically all mainstream web technologies servers, databases, browsers, compilers all of the foundations are open.nnhis is in stark contrast to when  was writing my degree dissertation "open source software in the business environment", shortly after  wrote "the athedral and the azaar", when icrosoft and its gigantic closed source codebase was the undisputed leader and there were but one or two serious eamples of open source software being used commercially.nno why hat changed id people suddenly realise that, as aymond put it, the "bazaar" model was the right way to go o. he introduction of ideas alone rarely make the difference and in any case, the notion of a distributed workforce, through individual interest working on a cohesive whole is not eactly ground breaking.nnn fact, software development, as a process, was always perfect for decentralisation - the one thing is lacked was a ubiquitous communications infrastructure for the developers - some way for them to share code seamlessly and work together easily. t is no surprise that the rise of the internet with , , senet and mailing lists coincided with that of open source software.nno was much else provided by the previous "cathedral" modelnnctually, yes. t facilitated a bunch of business stuff which we might loosely consider "value plumbing" firstly, it incentivised the practitioners - it paid developers to spend their time and energy on a project. econdly, it provided all necessary support assets to allow the development to take place (hardware, software, tools, educational material &c.). hirdly, it acted as a sink for funds - it collected payments from those who benefited from the work being done. n a nutshell, it looked after cash flow, scooping a tidy profit in return for enabling and incentivising solution production.nnssumed at first to be important, it turned out less so turns out people will often work on software just for the fun of it. onetheless, we cannot deny that this "value plumbing" still pays an important role in human activity and service provision.nno what does this tell us about the futurennusiness, and in particular the service industry, has, until now, followed very much a "cathedral" approach to the service commission, provision and management that would fall under this "value plumbing". e might recognise it by tight coordination, enforced consistency, eplicit top-down management, centralisation and rigidity. he fact we have singular legal entities with authority and responsibility over large swathes of production output is a very clear signal of this.nneay, as an enabling platform, was a trailblazer in truly global decentralisation it functioned as a key enabler for small businesses and cottage industries throughout the developed world (not to mention a lucrative source of funds for some of the less scrupulous operators in internet-enabled parts of the developing world). ith the eb . platform, and mobile (to which is it heavily entangled), we see a new class of decentralising applications. he so called "sharing economy" is beginning to form with ber, irn and askabbit as notable eamples. uch like eay, these operators reduce the relevance of a whole class of "structural intermediaries", and replace their "value-plumbing" with one large, technologically-adept match-maker.nnhe high-level deconstruction that they entail typically comes with some accidental degree of openness (ber's "safe-driver fee", irn's "cleaning charge" it typical to know more about your matched service provider). o what do tai firms, hostelries and un-/semi-skilled labour outfits have in common that made them key eamples to the "decentralised services" rom where do their profits come that allows them to be reduced to a scalable automaton so easilynnhey manage their reputation (through basic word of mouth, marketing and advertising), they manage their workforce (through finance, recruiting and agreements) the manage their market (through adapting to changing levels of supply and demand) and they manage their risks (vetting, indemnity, insurance and bonds).nnhough they cannot seriously claim to have created truly new or open markets, they are coming close. n the world of open source software they're a sort of shareware. ot quite commercial, but not really free either. here are still singular entities, match-makers, behind the decentralised veneer, as is evident when you go to statist and technosocial-lagard ermany and see that the only kind of ber you can request is a regular government-sanctioned tai.nno though these are not quite there yet, these are the beginnings of a social shift in epectations as consumers we epect greater transparency in the operations of our provider (from knowing the name of our driver to the precise origin of the rubber in our trainers) and greater freedom over the selection of our service as individuals we epect greater ability to sell our skills, time, possessions or potential as businesses we epect reduced barriers to entry in whatever markets we wish to compete. ust like in open-source software, it won't be long before legions of sufficiently-good amateurs (or professionals seeking to go it alone) will be competing, in a bazaar fashion, on an equal or greater footing to the cathedrals of industry.nnnd the idea of "bazaar services" is the eventual conclusion to this social shift. s open source software is practically zero-barrier to entry and fluid in terms of leadership and authority, so we will find the world of service provision following. he worries are the same as they were  years ago. he answers are similar.nnoftware writing was just the first thing to go fundamentally decentral, and only because of the natural tech-savviness of its people and its nature of being entirely information-based. ith thereum, crypto-law, eb . and the ilk, all aspects of services will follow the same route. he idea of a rigid organisation or corporation will evaporate and left will be the true essence of human interaction patterns, policed only by openness and information-theoretic mathematics. hereas once the "interaction-pattern-manager", "value-plumber"---or "corporation" for short---would be subject to laws on the emergent behaviour it was enabling, strict legality of the emergent behaviour will become increasingly less relevant as it becomes drastically pluralistic and unpoliceable with no entity, legal or otherwise, coordinating it or profiting from it.nne will begin to see a world without middlemen, intermediaries, trusted authorities, where services are not only delivered, but also advertised, found, matched and insured, directly from provider to consumer. nteraction patterns arise and continue not through the clumsy, inefficient legal system and slow and rigid corporate rules, but rather through the inherently adaptable emergent effects of fleible, agile and direct economic incentives. his is where we're heading and if it delivers as well as open source software has, it surely can't come fast enough.nnan we make profits from this new social model y opinion is a resounding yes profits will come, as always, from servicing (perceived) human needs or providing efficiency gains to those incentivised to recognise and deploy them. owever the sorts of models that are lucrative are not yet obvious. on't epect the profit-making entity to look like any now, or you'll be stuck like those searching for the net icrosoft back in  and placing their money in inu and edat. hat we think are great differentiators now will turn out to be commodity in  years, much like operating systems and browsers back in '.nno understand where these differentiators may lie first requires understanding what will be made commodity. ome food for thought what if "commodity" turns out to be a digital marketplace, fully vendor neutral, open and trustless biquitous "value-plumbing", business logic constantly evolving yet maintaining readiness that everybody, whoever they are, be able to take part in... azaar ervices.nn//  aving re-visitednnatnn,  must apologise for my abuse of aymond's analogies the original work was more about the distinction between traditional working practices (mostly commercial software, but it did include some  such as ) and decentralised working practices (what we now tend to think of as open source software development), rather than strictly proprietary/commercial vs . till in circumspect terms, the notion of decentralisation within software development is prevalent in and correlated to open source development. nterestingly, even aside from , some of the gile methodology ('m thinking ) could be argued to be joining this general trend towards the self-organisation, decentralisation and no-authority-operation of the azaar.
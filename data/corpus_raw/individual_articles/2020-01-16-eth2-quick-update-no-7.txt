Titre: eth2 quick update no. 7\nAuteur: Danny Ryan\nDate: January 16, 2020\nURL: https://blog.ethereum.org/2020/01/16/eth2-quick-update-no-7\nCatÃ©gorie: Non catÃ©gorisÃ©\n\n==================================================\n\nelcome to the first eth quick update of ! his is going to be an eciting year.nntldrnnelease ofnnv..nnspecnnas stable target for multi-client testnets and security reviewsnnpaulhauner and sigp_io teamnnhard at worknnbuilding ighthousennelaunchnnofnnrysm testnetnn, now with aggregators and mainnet configurationnn new proposal for an epedited merging of eth+eth (akannhase .nn)nnelease ofnnv..nnfor security reviews and multi-client testnetsnnv..nn--  ot oundnnwas released last week. ead thennrelease notesnnfor the technical details (integration of  , simpler eth caching, etc), but what does it actually mean for ethnnv..nnis the culmination of changes introduced to the hase  spec after the unfreezing following decon as well as the integration of the new   standards. or some time, these new spec changes disrupted the smooth development cycle of the eth client teams and postponed the release of testnets that were imminent. ith the release ofnnv..nn, we are now entering back into a smooth rhythm.nnew and updated resourcesnnith the release ofnnv..nn, we once again have a very stable target both for client testnets as well as third party audits and security reviews.nno this end, we recently updated a number of onboarding resources (and created a few new ones). f you are looking to better understand the eth hase  specs, you should definitely give these a look!nnhase  for umansnnth esign ationalnnhase  esign otesnnalidator ifecycle docnntate transition and  diagrams for optimized specnniscussion of attestation gossip and aggregation strategiesnnudits underwaynneast uthority kicked off their security review this onday and are currently digging deep. e have high epectations and are enthusiastic to be working with a team of such caliber!nnnother eciting piece of news is in the form of an audit and formalization of the hase  cryptoeconomics led by a new  team -- obust ncentives roup ().nn has constructed anncadnnenvironment to simulate the eth economic models and eplore a diverse range of attacks including timing attacks, the potential effects of different sized cartels, and more!nnheck outnnthe core of their worknnin the form of an easy to understand python notebook.nnhat's netnnhile 'll just give you a glimpse here,  promise to dive into more detail in subsequent posts.nnn parallel to ongoing audits, clients will code up tonnv..nn, integrate new  standards, and get some steady testnets running. nce initial stability innnv..nnis achieved, multi-client activity will begin.nnith respect to this activity,  first epect a small number of multi-client tests against largely single-client testnets. y this  mean  epect to see some clients joining what were previously single-client testnets -- as minority nodes -- to test initial interopability.nnnce we have success here, we'll orchestrate a shared genesis with + clients from the start.  epect some level of chaos and a lot of learning in this phase. mbiguities in the spec might become apparent with minor clarifying changes integrated. e might even find out something was broken that we previously thought was fine -- large testnets are their own form of audit.nnnce audit results begin to roll in throughout ebruary, we epect to make a wave of changes to the hase  spec. he etent of these changes and the implications they might have on client development and timelines is still to be determined. egardless, a post-auditnnv..nnrelease will drop near the start of arch.nnf the changes are small, clients will integrate the changes, patch testnets, and continue forward. f deeper, the integrations might take longer, require additional testing, and full restarts to eisting nets. fter sufficient time at a stablennv..nn, a finalnnv..nnwill be cut for mainnet release the eact length of time will depend on the depth of the changes.nnhis is a high level look at the coming months. 'll keep you updated and fill in more details as we go.nnighthouse on an optimization tearnnlthough igma rime has been relatively quiet since theynntook down their first public testnetnn, the team has been hard at work! ighthouse lead, aul auner, just dropped anneciting tweetstormnnfilled with juicy details of recent optimizations and gains on their eth client.nnpparently they've been running annnot-so-publicizednnpublic testnet for the past  weeks making impressive gains on everything from  to block processing to  reads/writes.nnull it down and try it yourselfnn!nnh and if you have some frontend chops and want to get involved, igma rime just put out annnf for a ighthouse ser nterfacenn. his kind of work is important to ensure that validating is readily accessible to all types of users.nnrysmatic's testnet relaunches with mainnet config and aggregatorsnnrysmatic abs recentlynnrestarted their public testnetnnnow with the mainnet configuration and the attestation aggregation strategy! s discussed in prior posts, the mainnet configuration has larger caches, longer epochs, and is generally a bit more hefty than the initially used minimal config. perating a stable testnet with this configuration and s of thousands of validators is an important milestone that rysmatic is currently working through.nnf you want to get your hands dirty,nnbecome a validatornnornnjoin the conversationnnon discord.nnh, andnnthey're hiringnn! orking remotely with rysm is a great opportunity for an eperienced dev. elp build the future!nnhase .nnver the holidays, italik posted annnew proposalnnon how we might epedite the eth+eth merger and begin reaping the benefits of the new eth infrastructure much sooner. his proposal suggests migrating eth into a shard of eth after the hase  infrastruture (shard data chains) is added but before a full hase  (featuring etensible s and all the cross-shard bells and whistles) -- thus hase .!nn phase . has many potential benefits to the ethereum protocol and to its developers and users.nnth living inside of eth allows for native access to the scalable sharded data layer. ome of the most eciting constructions being built on ethereum today are layer  protocols that scale with the amount of data available to layer . hese will pair beautifully with eth even with just a single chain with native computation (i.e. eth as shard). roadly, these constructions are called "rollups". hey come in many flavors and  epect this general design space to continue to epand and be fruitful.nnth migrating to a shard of eth eliminates o from the protocol, greatly reducing issuance and halting energy intensive mining on ethereum once and for all.nninally, integrating eth into eth on an earlier schedule reduces the amount of moving parts -- unifying the system, the community, and the development of the core protocol. lthough the eth infrastructure is being developed first in parallel to the eisting ethereum chain, an earlier integration of eth into eth (beyond just the technical wins) helps ensure the community of protocol developers, application developers, random contributors, and end-users remains united within a single, cohesive thereum.nnased upon initial discussions and reactions, developers and community members are ecited by this proposal. hase . as it currently stands largely relies upon the success of two independent components -- hase  of eth and tateless thereum on eth. he relative timelines of each of these components will inform as to how and when this proposal might come to fruition. ver the coming months, we will do due diligence on better spec'ing and understanding the technical challenges at hand so that we are prepared to move on this if/when the time is right ðŸš€.
Titre: Dodging a bullet: Ethereum State Problems\nAuteur: Martin Holst Swende & Peter Szilagyi\nDate: May 18, 2021\nURL: https://blog.ethereum.org/2021/05/18/eth-state-problems\nCatégorie: Non catégorisé\n\n==================================================\n\nith this blog post, the intention is to officially disclose a severe threat against the thereum platform, which was a clear and present danger up until the erlin hardfork.nntatennet's begin with some background on thereum and tate.nnhe thereum state consists of a patricia-merkle trie, a prefi-tree. his post won't go into it in too much detail, suffice to say that as the state grows, the branches in this tree become more dense. ach added account is another leaf. etween the root of the tree, and the leaf itself, there are a number of "intermediate" nodes.nnn order to look up a given account, or "leaf" in this huge tree, somewhere on the order of - hashes need to be resolved, from the root, via intermediate nodes, to finally resolve the last hash which leads to the data that we were looking for.nnn plain terms whenever a trie lookup is performed to find an account, - resolve operations are performed. ach resolve operation is one database lookup, and each database lookup may be any number of actual disk operations. he number of disk operations are difficult to estimate, but since the trie keys are cryptographic hashes (collision resistant), the keys are "random", hitting the eact worst case for any database.nns thereum has grown, it has been necessary to increase the gas prices for operations which access the trie. his was performed innnangerine histlennat blocknn,,nnin ctober , which includednn nn.   aggressively raised certain gascosts and introduced a whole slew of changes to protect against o attacks, in the wake of the so called "hanghai attacks".nnnother such raise was performed in thennstanbulnnupgrade, at blocknn,,nnin ecember . n this upgrade,nn nnwas activated.nn- introduced the following changennnnwent fromnnnntonnnngas,nnnnwent fromnnnntonnnngas (and a cheapernnnn) was added,nnnnwent fromnnnntonnnngas,nnhe problem(s)nnn arch , artin wende was doing somennmeasurementsnnof  opcode performance. hat investigation later led to the creation of -.  few months prior to - going live, the papernnroken etrennwas published (eptember ).nnwo thereum security researchers -- ubert itzdorf and atthias gli -- teamed up with one of the authors behind the paper aniel erez, and 'weaponized' an eploit which they submitted to the thereum bug bounty in. his was on ctober , .nne recommend you to read thennsubmissionnnin full, it's a well-written report.nnn a channel dedicated to cross-client security, developers from eth, arity and leth were informed about the submission, that same day.nnhe essence of the eploit is to trigger random trie lookups.  very simple variant would bennjumpdestnnnnjump label, start of loopnngasnnnnget ann'random'nnvalue on the stacknnetcodesizennnntrigger trie lookupnnpopnnnnignore the etcodesize resultnnpush nnnnjump label destnnjumpnnnnjump back to startnnn their report, the researchers eecuted this payload against nodes synced up to mainnet, vianneth_callnn, and these were their numbers when eecuted withnnnngasnnnngas eploit usingnnnn(at  gas)nnaritynn~snnethnn~snnnngas eploit usingnnnn(at  gas)nnarity nn~snneth nn~snns is plainly obvious, the changes in   were definitely making an impact at reducing the effects of the attack, but it was nowhere near sufficient.nnhis was right before evcon in saka. uring evcon, knowledge of the problem was shared among the mainnet client developers. e also met up with ubert and athias, as well as reg arkou (from hainsafe -- who were working on ).  developers had also received the report.nns  were drawing to a close, we knew that we had larger problems than we had previously anticipated, where malicious transactions could lead to blocktimes in the minute-range. o further add to the woes the dev community were already not happy about - which hade made certain contract-flows break, and users and miners alike were sorely itching for raised block gas limits.nnurthermore, a mere two months later, in ecember , arity thereumnnannouncednntheir departure from the scene, and penthereum took over maintenance of the codebase.nn new client coordination channel was created, where eth, ethermind, penthereum and esu developers continued to coordinate.nnhe solution(s)nne realised that we would have to do a two-pronged approach to handle these problems. ne approach would be to work on the thereum protocol, and somehow solve this problem at the protocol layer preferrably without breaking contracts, and preferrably without penalizing 'good' behaviour, yet still managing to prevent attacks.nnhe second approach would be through software engineering, by changing the data models and structures within the clients.nnrotocol worknnhe first iteration of how to handle these types of attacks isnnherenn. n ebruary , it was officially launched asnn nn. he idea behind it is to simply add a penalty every time a trie lookup causes a miss.nnowever, eter found a work-around for this idea -- the 'shielded relay' attack - which places an upper bound (around ~) on how large such a penalty can effectively be.nnhe issue withnnpenalties for missesnnis that the lookup needs to happen first, to determine that a penalty must be applied. ut if there is not enough gas left for the penalty, an unpaid consumption has been performed. ven though that does result in a throw, these state reads can be wrapped into nested calls allowing the outer caller to continue repeating the attack without paying the (full) penalty.nnecause of that, the  was abandoned, while we were searching for a better alternative.nnleey khunov eplored the idea ofnnilnn-- a secondary source of "gas", but which was intrinsically different fromnngasnn, in that it would be invisible to the eecution layer, and could cause transaction-global reverts.nnartin wrote up a similar proposal, aboutnnarmann, in ay .nnhile iterating on these various schemes, italik uterin proposed to just increase the gas costs, and maintain access lists. n ugust , artin and italik started iterating on what was to becomenn-nnand its companion-eip,nn-nn.nn- effectively solved a lot of the former issues.nns opposed to -, which unconditionally raised costs, it instead raised costs only for things not already accessed. his leads to a merennsub-percent increasennin net costs.nnlso, along with -, it does not break any contract flows,nnnd it can be further tuned with raised gascosts (without breaking things).nnn the th of pril , they both went live with thennerlinnnupgrade.nnevelopment worknneter's attempt to solve this matter wasnndynamic state snapshotsnn, in ctober .nn snapshot is a secondary data structure for storing the thereum state in a flat format, which can be built fully online, during the live operation of a eth node. he benefit of the snapshot is that it acts as an acceleration structure for state accessesnnnstead of doingnn(log )nndisk reads (nnnnevel overhead) to access an account / storage slot, the snapshot can provide direct,nn()nnaccess time (nnnnevel overhead).nnhe snapshot supports account and storage iteration atnn()nncompleity per entry, which enables remote nodes to retrieve sequential state data significantly cheaper than before.nnhe presence of the snapshot also enables more eotic use cases such as offline-pruning the state trie, or migrating to other data formats.nnhe downside of the snapshot is that the raw account and storage data is essentially duplicated. n the case of mainnet, this means an etrannnnof  space used.nnhe dynamic snapshot idea had already been started in mid , aiming primarily to be an enabler fornnsnapnnsync. t the time, there were a number of "big projects" that the geth team was working on.nnffline state pruningnnynamic snapshots + snap syncnn state distribution via sharded statennowever, it was decided to fully prioritize on snapshots, postponing the other projects for now. hese laid the ground-work for what was later to becomennsnap/nnsyncnnalgorithmnn. t was merged in arch .nnith the "dynamic snapshot" functionality released into the wild, we had a bit of breathing room. n case the thereum network would be hit with an attack, it would be painful, yes, but it would at least be possible to inform users about enabling the snapshot. he whole snapshot generation would take a lot of time, and there was no way to sync the snapshots yet, but the network could at least continue to operate.nnying up the threadsnnn arch-pril , thennsnap/nnprotocol was rolled out in geth, making it possible to sync using the new snapshot-based algorithm. hile still not the default sync mode, it is one (important) step towards making the snapshots not only useful as an attack-protection, but also as a major improvement for users.nnn the protocol side, thennerlinnnupgrade occurred pril .nnome benchmarks made on our  monitoring environment are belownnre-berlin, no snapshots,nnnngasnn.snnre-berlin, with snapshots,nnnngasnn.snnost-berlin, no snapshots,nnnngasnn~.snnost-berlin, with snapshots,nnnngasnn~.snnhe (rough) numbers indicate thatnnerlinnnreduced the efficiency of the attack bynnnn, and snapshot reduces it bynnnn, totalling to annnnreduction of impact.nne estimate that currently, on ainnet ( gas), it would be possible to create blocks that would takenn.-snnto eecute on anngethnnnodennwithoutnnsnapshots. his number will continue to deteriorate (for non-snapshot nodes), as the state grows.nnf refunds are used to increase the effective gas usage within a block, this can be further eacerbated by a factor of (ma)nnnn. ithnn nn, the block gas limit will have a higher elasticity, and allow a furthernnnn(thenn_nn) in temporary bursts.nns for the feasibility of eecuting this attack the cost for an attacker of buying a full block would be on the order of a few ether (nnnngas atnnweinnisnn.nnether).nnhy disclose nownnhis threat has been an "open secret" for a long time -- it has actually been publically disclosed by mistake at least once, and it has been referenced in  calls several times without eplicit details.nnince the erlin upgrade is now behind us, and since geth nodes by default are using snapshots, we estimate that the threat is low enough that transparency trumps, and it's time to make a full disclosure about the works behind the scenes.nnt's important that the community is given a chance to understand the reasoning behind changes that negatively affect the user eperience, such as raising gas costs and limiting refunds.nnhis post was written by artin olst wende and eter zilagyi --.
t was shared with other thereum-based projects at --, and publically disclosed --.
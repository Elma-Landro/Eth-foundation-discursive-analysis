Titre: Blockchain Scalability: Chain-Fibers Redux\nAuteur: Gavin Wood\nDate: April 5, 2015\nURL: https://blog.ethereum.org/2015/04/05/blockchain-scalability-chain-fibers-redux\nCatégorie: Non catégorisé\n\n==================================================\n\nistorynn came up with the first seed of this idea while chatting to anislav alahov in erlin in pring . nfortunately, the original article  wrote was lost along with my laptop when it was stolen in ienna. fter chatting over the principles with italik more recently, we made a number of alterations and formalisations, mainly to the validation and the sub-state cutting mechanisms. hat follows is a fairly complete illustration of one particular possible plan for block chain scalability in a later version of thereum.nnince this is by no means a final proposal, there is annitub iki pagennthat will track the progress on this particular idea.nnverviewnnhe basic idea of hain-ibers is unchanged from a year ago split the state-space up into strata and have separate transaction collators specialising in one or a number of state sub-spaces. ransactions requiring interactions from many a subspace would be accordingly more epensive (since collators would have to maintain presence on multiple chains) and take longer to eecute (since there is a lesser chance that any given block would contain a superset of the transaction's subspaces). alidity of a transaction is verifiable in isolation through the provision of comprehensive erkle proofs to its inputs alongside it in the block in which it is included.nnhe subtleties lie in precisely what governs the division of subspaces (my original proposal included the automated splitting, merging and rotation of subspace-divisions in order to best deliver internal coherency), how security is maintained within comparatively worthless subspaces and how this can play well with roof-of-take (the original was based upon a master o chain, feeding off an idea put forward by a aye in early  to disassociate block chain archival from transition semantics).nnasic idea is to have a number of chains (e.g. ), each detailing the state-transitions for only a strata of the entire system state (i.e. a state subspace). ollowing from programming terminology, these might be termed "fibers". ccounts thus belong to a subspace and as such a single fiber the fiber to which they belong can be determined simply from the first log() bits of the address.  can increase or decrease, and is a value maintained within the housekeeping information on the "aster hain".nnhe aster hain in maintained by a set of bonded alidators , with the number of validators proportional to .  random selection of validators validate each block produced, and validators ultimately vote to form consensus over the aster hain. ach block of the aster hain maintains a reference to the header of each fiber.nnransaction collators produce blocks (accepting fees from transactors), and pay alidators some of the fees collected to include the hash of their block in the main chain. locks are produced across a particular "home set" of fibers this is basically just the set of fibers of which they maintain the tate rie. heir blocks may involve transactions over one or many of these fibers, though none outside their "home set".nn"ishermen" is a term given to freelance checkers. ince block validation and availability are both important, and since it is possible that sets of validators may be contractually bribed, it is important to have a mechanism to involve additional rational individuals in acting as "whistle-blowers" to avoid bogging the other validators needlessly checking all blocks. he fishermen basically pay to attempt to convince a quorum of validators that a previously validated block is invalid (or unavailable, which we assume is equivalent). f a fisherman demonstrates a validator (or, more likely, set of validators) acted in a dishonourable fashion, then they get to claim all of their bonds. o avoid oing the validators with spurious challenges, a fee is payable.nnchematicnnorry for the not-quite -art. 'm not quite as  at nkscape as italik.nnransactors        +  ollators                     +  alidators
make transaction                 validate transaction,                         random selection chosen to audit
                                produce omprehensive erkle                    // contents & availability,
                                  roof and ost tate oot,                  all placed in o-consensus master block
                                collate into -fiber locknnishermennnnn+nnnnnnalidatorsnnsearchnnfornninvalid or                         a selection adjudicate challengennunavailable -fiber blocksnnransactorsnnransactors are pretty much eactly the same as in thereum . - they are the users of the system.nnransactors make transactionnnransactors make a transaction much like they do in the eisting thereum system. ne or two minor differences - addresses can be used as a distance metric those sharing the same number of initial bits are considered "closer", which means a greater certainty into the future that they will continue to be contained in the same state subspace. ontracts are naturally created in the same state subspace as the creator.nnransactions, like ollators, operate over a number of fibers perhaps one perhaps all, probably somewhere in between. ubmission to collators may be directed through fiber sub-network overlays.nnubmission and payment to the collators happens much as eisting transaction submission to miners happens in thereum ..nnollatorsnnollators maintain presence on at least two peer sub-network overlays the alidators overlay, and one or more fiber overlays. he fiber overlays may provide directed transaction propogation. ollators "collate" on a set of fibers. hey maintain a full fiber-chain for each fiber they collate over, and can accept all transactions that involve any combination of their fiber set. he greater this combination, then the greater their "transaction net", but the greater their overall disk/memory footprint.nnollators validate transactionnnn receipt of a transaction, they go through the usual thereum . rites of checking payment is enough, initial balances &c. nce basic validation is done, they attempt to eecute it, throwing it out if it touches any fiber that is not part of collator's fiber set.nnollators produce omprehensive erkle roof and ost tate ootnnollators provide each post-state-root (as is found in the transaction receipt of thereum .) and append to the block erkle proofs and associated hints (e.g. contract code) for all inputs (balance, nonce, state, code) from all subspaces that are required for the evaluation of each transaction from a previously known post-state-root.nnhis allows an auditor to, without anything other than the previous post-state-root for each fiber, determine the validity of the block.nnollators collate into -fiber locknn ross iber lock is created from the total information collated. his includes transactions, transaction receipts (post-state-roots), omprehensive erkle-roofs and associated hash-hints. his block does not include any consensus-specific information such as timestamping, uncles &c.nnalidatorsnnalidators (who might be better named auditors) are bonded particpants, chosen regularly from the highest bidders, who take a small fee for the ultimate maintenence of the network. heir job, as a whole, is to form a judiciary and ultimate authority over the validity and transaction contents of the chain. e generally assume that they are mostly benevolent and cannot all be bribed. eing bonded, validators may also be called to audit and stake their bond on an opinion over validity or information-availability.nnalidators all placed in o-consensus master blocknnhey maintain signing control over the aster hain. he aster hain () encodes all o/consensus stuff like timestamping and includes its own little state root for recording validator's bond balances, ongoing challenges, fiber block header-hashes and any other housekeeping information.nnach master block (), a set of collated -iber locks (s) are taken these must be non-overlapping, so that each fiber belongs to only a single .nnalidators random selection chosen to audit // contents & availabilitynnor each  we have a number of s referenced from the 's rie. ach fiber is assigned a randomly selected set of validators, and the validators must review whatever  contains their assigned fiber. alidation includes attaining the , finding the previous s for each of the fibers (placed in the ) and checking that the proofs in its , cover all required inputs to the transactions collated within and that the  is indeed the final state root when all are eecuted.nnhe block is considered valid iff all assigned validators sign it. igning it is considered an assertion that the block contents are both valid and available for a probabilistically long "challenge period" in which a isherman may challenge. ny challenge to the block's validity which is ultimately upheld by a full consensus of a randomly selected set of validators (ultimately ending with a majority vote, should it be doggedly contested) will mean the instant loss of the bond.nnishermennnishermen (who might be called bounty hunters) are the freelance error-checkers of the system. he watch the validators in the hope that they can find wrong-doing. o help guarantee presence, payouts are designed to be huge. he costs of challenging are small but not insignificant.nnishermen search for invalid or unavailable -fiber blocksnnhey check the -fiber blocks looking for validity errors and/or inavailability of data. hen they find an invalid block or unavailable data, they launch a challenge (for a small fee, paid to validators) in the hope that a sufficiently large portion of validators will concur. f they succeed and validators ultimately uphold the challenge, then they receive the bonds of all validators who had previously asserted validity/availability of the information.nnishermen's hallengennisherman finds an invalid/unavailable block not yet outside its "challenge period" (- blocks) pays a fee, submits a challenge transaction into the master chainnn randomly selected set of validators (e.g. of order e.g. sqrt()) ++ any validators that self-select (through doubling their bond), check the block that was challenged each votes  or  to the block's validitynnf , the validator receives a small payment n.nnf , the validator stakes their bond, though receives a larger payment y (perhaps y  n).nnhe outcome of the challenge (probably accumulated into the following block) isnnf more than % of validators vote  (valid), then the challenge ends. he isherman loses their fee, but may reinitiate a challenge.nnf at least one validator votes  (valid), then the challenge continues with a second, larger set of randomly selected validators. ll bonds are staked.nnf all validators vote  (invalid), then the block is recorded as invalid and the ishermen receives the bond of all validators that have asserted the blocks validity. his is a very large payoff.nn f the set includes all validators, then it's a simple majority-carries rule.nnther differencesnnll addresses are contained in a lookup table unique to each state subspace this means they can be referenced through a small number of bits and avoid large amounts of wasted entropy in the  for proofs &c.nnotesnnnce a block is out of the challenge period, it is considered unassailable. f it does turn out to be bad, then it must be fied in the same way as a protocol upgrade. s such it is likely that validators and other large stakeholder would act as ishermen to protect their investment.
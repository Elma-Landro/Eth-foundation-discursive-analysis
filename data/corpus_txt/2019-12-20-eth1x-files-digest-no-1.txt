Titre: The 1.x Files: December call digest\nAuteur: Griffin Ichiba Hotchkiss\nDate: December 20, 2019\nURL: https://blog.ethereum.org/2019/12/20/eth1x-files-digest-no-1\nCatégorie: Non catégorisé\n\n==================================================\n\necember  tldc (too long, didn't call)nnisclaimernnnnhis is a digest of the topics discussed in the recurring th. research call, and doesn't represent finalized plans or commitments to network upgrades.nnhe main topic of discussion for this call and broader th. research is the feasibility ofnnstateless ethereumnn. his week was largely about organizing and sizing up the various challenges the stateless client concept will need to overcome to be viable, and identifying some tangible objectives on the short-term ( to  months) to focus on.nnn the logistical sidennt this point there is not enough compiled content to warrant the creation of an th spec repo, but establishing a public repository for continued research will be revisited at the net call/meeting.nnhe th . working group will be aiming to hold ~ in-person meet-ups net year, with the first one tentatively-planned adjacent to th, but as rance is still on strike this is still uncertain.nnhe net call is tentatively scheduled for mid-anuary . s always, if you are interested in joining the call or thenntelegram groupnn, pleasennintroduce yourselfnnon the ethresearch forums.nnne area that the working group is focusing on is maintaining a high level of communication with the broader thereum community. his includes speaking and answering questions at the many thereum conferences in , but also includes eplainers and these call updates. f you have feedback on th . comms, want to find a speaker for an upcoming event, or have any questions, please reach out to gichiba or ancock on twitter or the ethresearch forums.nnechnical discussionnntatelessness is a spectrum. t would be nearly impossible to design and implement a network change that would makennallnnnodes on thereum change to a stateless paradigm. ather, something less dramatic should happen ew network primitives can be developed that allow for a range of stateful/stateless behavior with miners and archive nodes remaining "full-state", while clients and dapp-specific nodes can choose to maintain partial state, or be fully stateless.nnhere are a range of issues that need to be considered for this to worknnuestions about the incentives to keep full or partial state, and what effect those incentives have on the overall topology of the network. or eample, there needs to be an incentive for a full-state miner to include witness data with each block, and an incentive to verify witnesses on received blocks. ecause tateless thereum introduces a variety of new node types, these incentives (especially ones affecting miners) must be carefully considered.nnt seems like a semi-stateful network would naturally arrange itself like the diagram below, with full-state miners passing and verifying new blocks outwards to partial-state clients, who can still provide witnesses for the stateless clients out on the edges (relying entirely on witnesses). his isn't a good or bad thing, but the implications of a topology like below need to be eplored.nnitness format has not yet been formally defined. ptimistically, the format for witnesses would be cast in the same mold asnnthe red queen syncnnprotocol for state, and the semantics of witnesses formalized as such. here are huge benefits to a more formal definition of witnesses in the contet of client development, and indeed the turbo-geth team is hoping to have witnesses formalized early net year. lock witnesses and their propogation are essential for moving towards the stateless client concept.nnn the more near-term, trinity's beam sync implements a limited version of state witnesses, and is a good first step toward witnesses on mainnet. eam sync is notnnspecificallynna pre-cursor to stateless client research (rather, it's a  improvement for th .), but can be seen as an opportunity for network eperimentation with witness propagation, especially between different implementations. urrently esu is eperimenting with their own prototype of beam sync. ne tangible goal for the near term is getting a common test specification for cross-client sync, which will help with data collection later down the road. his sounds like a job fornnivenn. s it stands, beam sync is planned to be ready for prime-time (reliably passing around witnesses) in  net year.nnhere are compleities around gas and witness sizes that must be addressed for stateless clients to be workable. t's thought that ei ang's 'unas' proposal is a potential solution, but even though it is not particularly complicated to implement within thereum, there are spillover effects (such as necessary changes to compilers, potential smart contract effects, etc) that complicate implementation. ll these have yet to be thoroughly investigated.nnhe broader goal with this discussion is to focus and organize work in the short-term. his means prioritizing work on witness specification/implementation, beginning to outline some standard testing for cross-client sync, and collecting more data on modeling network requirements for witness propagation.
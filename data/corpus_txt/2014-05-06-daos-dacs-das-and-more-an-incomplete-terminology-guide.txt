Titre: DAOs, DACs, DAs and More: An Incomplete Terminology Guide\nAuteur: Vitalik Buterin\nDate: May 6, 2014\nURL: https://blog.ethereum.org/2014/05/06/daos-dacs-das-and-more-an-incomplete-terminology-guide\nCatégorie: Non catégorisé\n\n==================================================\n\nne of the most popular topics in the digital consensus space (a new term for cryptocurrency . that ’m beta-testing) is the concept of decentralized autonomous entities. here are now a number of groups rapidly getting involved in the space, includingnnitsharesnn(also known as nvictus nnovations) developing “decentralized autonomous companies”, itngels’ avid ohnston withnndecentralized applicationsnn, our own concept ofnndecentralized autonomous corporationsnnwhich has since transformed into the much more general and not necessarily financial “decentralized autonomous organizations” (s) all in all, it is safe to say that “ism” is well on its way to becoming a quasi-cyber-religion. owever, one of the hidden problems lurking beneath the space is a rather blatant one no one even knows what all of these invididual terms mean. hat eactly is a decentralized organization, what is the difference between an organization and an application, and what even makes something autonomous in the first place any of us have been frustrated by the lack of coherent terminology here as itshares’ aniel arimernnpoints outnn, “everyone thinks a  is just a way of ing your centralized company.” he intent of this article will be to delve into some of these concepts, and see if we can come up with at least the beginnings of a coherent understanding of what all of these things actually are.nnmart contractsnn smart contract is the simplest form of decentralized automation, and is most easily and accurately defined as follows a smart contract is a mechanism involving digital assets and two or more parties, where some or all of the parties put assets in and assets are automatically redistributed among those parties according to a formula based on certain data that is not known at the time the contract is initiated.nnne eample of a smart contract would be an employment agreement  wants to paynnnntnnonnnntnnonnbnnunninnlnndnnannwnnennbnnsnninntnnenn.nnnnhnnenncnnonnnnntnnrnnanncnntnnwnnonnunnlnndnnwnnonnrnnknnannsnnfnnonnlnnlnnonnwnnsnnnnnnpnnunntnnsnn to  to build a website. he contract would work as follows  putsnnnntnnonntnnonnbnnunninnlnndnnannwnnennbnnsnninntnnenn.nnnnhnneconnnnntnnrnnanncnntwnnonnunnlnndnnwnnornnkannsnnfnnonnllnnonnwnnsnnnnnnpnnunntnnsnn into the contract, and the funds are locked up. hen  finishes the website,  can send a message to the contract asking to unlock the funds. f  agrees, the funds are released. f  decides not to finish the website,  can quit by sending a message to relinquish the funds. f  claims that he finished the website, but  does not agree, then after a -day waiting period it’s up to judge  to provide a verdict in  or ’s favor.nnhe key property of a smart contract is simple there is only a fied number of parties. he parties do not all have to be known at initialization-time a sell order, where  offers to sell  units of asset  to anyone who can provide  units of asset , is also a smart contract. mart contracts can run on forever hedging contracts and escrow contracts are good eamples there. owever, smart contracts that run on forever should still have a fied number of parties (eg. an entire decentralized echange is not a smart contract), and contracts that are not intended to eist forever are smart contracts because eisting for a finite time necessarily implies the involvement of a finite number of parties.nnote that there is one gray area here contracts which are finite on one side, but infinite on the other side. or eample, if  want to hedge the value of my digital assets,  might want to create a contract where anyone can freely enter and leave. ence, the other side of the contract, the parties that are speculating on the asset at  leverage, has an unbounded number of parties, but my side of the contract does not. ere,  propose the following divide if the side with a bounded number of parties is the side that intends to receive a specific service (ie. is a consumer), then it is a smart contract however, if the side with a bounded number of parties is just in it for profit (ie. is a producer), then it is not.nnutonomous gentsnnutonomous agents are on the other side of the automation spectrum in an autonomous agent, there is no necessary specific human involvement at all that is to say, while some degree of human effort might be necessary to build the hardware that the agent runs on, there is no need for any humans to eist that are aware of the agent’s eistence. ne eample of an autonomous agent that already eists today would be a computer virus the virus survives by replicating itself from machine to machine without deliberate human action, and eists almost as a biological organism.  more benign entity would be a decentralized self-replicating cloud computing service such a system would start off running an automated business on one virtual private server, and then once its profits increase it would rent other servers and install its own software on them, adding them to its network.nn full autonomous agent, or a full artificial intelligence, is the dream of science fiction such an entity would be able to adjust to arbitrary changes in circumstances, and even epand to manufacture the hardware needed for its own sustainability in theory. etween that, and single purpose agents like computer viruses, is a large range of possibilities, on a scale which can alternatively be described as intelligence or versatility. or eample, the self-replicating cloud service, in its simplest form, would only be able to rent servers from a specific set of providers (eg. mazon, icrotroni and amecheap).  more comple version, however, should be able to figure out how to rent a server from any provider given only a link to its website, and then use any search engine to locate new websites (and, of course, new search engines in case oogle fails). he net level from there would involve upgrading its own software, perhaps using evolutionary algorithms, or being able to adapt to new paradigms of server rental (eg. make offers for ordinary users to install its software and earn funds with their desktops), and then the penultimate step consists of being able to discover and enter new industries (the ultimate step, of course, is generalizing completely into a full ).nnutonomous agents are some of the hardest things to create, because in order to be successful they need to be able to navigate in an environment that is not just complicated and rapidly changing, but also hostile. f a web hosting provider wants to be unscrupulous, they might specifically locate all instances of the service, and then replace them with nodes that cheat in some fashion an autonomous agent must be able to detect such cheating and remove or at least neutralize cheating nodes from the system.nnecentralized pplicationsnn decentralized application is similar to a smart contract, but different in two key ways. irst of all, a decentralized application has an unbounded number of participants on all sides of the market. econd, a decentralized application need not be necessarily financial. ecause of this second requirement, decentralized applications are actually some of the easiest things to write (or at least, were the easiest before generalized digital consensus platforms came along). or eample, itorrent qualifies as a decentralized application, as do opcorn ime, itessage, or and aidsafe (note that aidsafe is also itself a platform for other decentralized applications).nnenerally, decentralized applications fall into two classes, likely with a substantial gray area between the two. he first class is a fully anonymous decentralized application. ere, it does not matter who the nodes are every participant is essentially anonymous and the system is made up of a series of instant atomic interactions. itorrent and itessage are eamples of this. he second class is a reputation-based decentralized application, where the system (or at least nodes in the system) keep track of nodes, and nodes maintain status inside of the application with a mechanism that is purely maintained for the purpose of ensuring trust. tatus should not be transferable or have de-facto monetary value. aidsafe is an eample of this. f course, purity is impossible – even a itorrent-like system needs to have peers maintain reputation-like statistics of other peers for anti-o purposes however, the role that these statistics play is purely in the background and very limited in scope.nnn interesting gray area between decentralized applications and “something else” is applications like itcoin and amecoin these differ from traditional applications because they create ecosystems and there is a concept of virtual property that has value inside the contet of this ecosystem, in itcoin’s case bitcoins and in amecoin’s case namecoins and domain names. s we’ll see below, my classification of decentralized autonomous organizations touches on such concepts, and it is not quite clear eactly where they sit.nnecentralized rganizationsnnn general, a human organization can be defined as combination of two things a set of property, and a protocol for a set of individuals, which may or may not be divided into certain classes with different conditions for entering or leaving the set, to interact with each other including rules for under what circumstances the individuals may use certain parts of the property. or eample, consider a simple corporation running a chain of stores. he corporation has three classes of members investors, employees and customers. he membership rule for investors is that of a fied-size (or optionally quorum-adjustable size) slice of virtual property you buy some virtual property to get in, and you become an investor until you sell your shares. mployees need to be hired by either investors or other employees specifically authorized by investors (or other employees authorized by other employees authorized by investors, and so on recursively) to participate, and can also be fired in the same way, and customers are an open-membership system where anyone can freely interact with the store in the obvious officially sanctioned way for any time. uppliers, in this model, are equivalent to employees.  nonprofit charity has a somewhat different structure, involving donors and members (charity recipients may or may not be considered members the alternative view sees the positive increments in the recipients’ welfare as being the charity’s “product”).nnhe idea of a decentralized organization takes the same concept of an organization, and decentralizes it. nstead of a hierarchical structure managed by a set of humans interacting in person and controlling property via the legal system, a decentralized organization involves a set of humans interacting with each other according to a protocol specified in code, and enforced on the blockchain.   may or may not make use of the legal system for some protection of its physical property, but even there such usage is secondary. or eample, one can take the shareholder-owned corporation above, and transplant it entirely on the blockchain a long-running blockchain-based contract maintains a record of each individual’s holdings of their shares, and on-blockchain voting would allow the shareholders to select the positions of the board of directors and the employees. mart property systems can also be integrated into the blockchain directly, potentially allowing s to control vehicles, safety deposit boes and buildings.nnecentralized utonomous rganizationsnnere, we get into what is perhaps the holy grail, the thing that has the murkiest definition of all decentralized autonomous organizations, and their corporate subclass, decentralized autonomous corporations (or, more recently, “companies”). he ideal of a decentralized autonomous organization is easy to describe it is an entity that lives on the internet and eists autonomously, but also heavily relies on hiring individuals to perform certain tasks that the automaton itself cannot do.nniven the above, the important part of the definition is actually to focus on what a  is not, and what is not a  and is instead either a , a  or an automated agent/. irst of all, let’s consider s. he main difference between a  and a  is that a  hasnninternal capitalnn that is, a  contains some kind of internal property that is valuable in some way, and it has the ability to use that property as a mechanism for rewarding certain activities. itorrent has no internal property, and itcloud/aidsafe-like systems have reputation but that reputation is not a saleable asset. itcoin and amecoin, on the other hand, do. owever, plain old s also have internal capital, as do autonomous agents.nnecond, we can look at s. he obvious difference between a  and a , and the one inherent in the language, is the word “autonomous” that is, in a  the humans are the ones making the decisions, and a  is something that, in some fashion, makes decisions for itself. his is a surprisingly tricky distinction to define because, as dictatorships are always keen to point out, there is really no difference between a certain set of actors making decisions directly and that set of actors controlling all of the information through which decisions are made. n itcoin, a % attack between a small number of mining pools can make the blockchain reverse transactions, and in a hypothetical decentralized autonomous corporation the providers of the data inputs can all collude to make the  think that sending all of its money tokfpmonsq constitutes paying for a million nodes’ worth of computing power for ten years. owever, there is obviously a meaningful distinction between the two, and so we do need to define it.nny own effort at defining the difference is as follows. s and s are both vulnerable to collusion attacks, where (in the best case) a majority or (in worse cases) a significant percentage of a certain type of members collude to specifically direct the *’s activity. owever, the difference is this in a  collusion attacks are treated as a bug, whereas in a  they are a feature. n a democracy, for eample, the whole point is that a plurality of members choose what they like best and that solution gets eecuted in itcoin’s on the other hand, the “default” behavior that happens when everyone acts according to individual interest without any desire for a specific outcome is the intent, and a % attack to favor a specific blockchain is an aberration. his appeal to social consensus is similar to the definition of a government if a local gang starts charging a property ta to all shopowners, it may even get away with it in certain parts of the world, but no significant portion of the population will treat it as legitimate, whereas if a government starts doing the same the public response will be tilted in the other direction.nnitcoin is an interesting case here. n general, it seems to be much closer to a  than a . owever, there wasnnone incident in nnwhere the reality proved to be rather different. hat happened was that an eceptional block was (at least we hope) accidentally produced, which was treated as valid according to the itcoint . clients, but invalid according to the rules of itcoint .. he blockchain forked, with some nodes following the blockchain after this eceptional block (we’ll call this chain ), and the other nodes that saw that block as invalid working on a separate blockchain (which we’ll call ). ost mining pools had upgraded to itcoint ., so they followed , but most users were still on . and so followed . he mining pool operators came together on  chat, and agreed to switch their pools to mining on , since that outcome would be simpler for users because it would not require them to upgrade, and after si hours the  chain overtook  as a result of this deliberate action, and  fell away. hus, in this case, there was a deliberate % attack which was seen by the community as legitimate, making itcoin a  rather than a . n most cases, however, this does not happen, so the best way to classify itcoin would be as a  with an imperfection in its implementation of autonomy.nnowever, others are not content to classify itcoin as a , because it is not really smart enough. itcoin does not think, it does not go out and “hire” people with the eception of the mining protocol, and it follows simple rules the upgrading process for which is more -like than -like. eople with this view would see a  as something that has a large degree of autonomous intelligence of its own. owever, the issue with this view is that there must be a distinction made between a  and an /. he distinction here is arguably this an  is completely autonomous, whereas a  still requires heavy involvement from humans specifically interacting according to a protocol defined by the  in order to operate. e can classify s, s (and plain old s), s and a fourth category, plain old robots, according to a good old quadrant chart, with another quadrant chart to classify entities that do not have internal capital thus altogether making a cubenns  automation at the center, humans at the edges. hus, on the whole, it makes most sense to see itcoin and amecoin as s, albeit ones that barely cross the threshold from the  mark. he other important distinction is internal capital a  without internal capital is a  and an organization without internal capital is a forum thennnn, for eample, would qualify as a forum. s in the graph above are “decentralized communities” an eample of that might be something like a decentralized eddit, where there is a decentralized platform, but there is also a community around that platform, and it is somewhat ambiguous whether the community or the protocol is truly “in charge”.nnecentralized utonomous orporationsnnecentralized autonomous corporations/companies are a smaller topic, because they are basically a subclass of s, but they are worth mentioning. ince the main eponent of  as terminology is aniel arimer, we will borrow as a definition the point that he himself consistently promotes a  pays dividends. hat is, there is a concept of shares in a  which are purchaseable and tradeable in some fashion, and those shares potentially entitle their holders to continual receipts based on the ’s success.   is non-profit though you can make money in a , the way to do that is by participating in its ecosystem and not by providing investment into the  itself. bviously, this distinction is a murky one all s contain internal capital that can be owned, and the value of that internal capital can easily go up as the  becomes more powerful/popular, so a large portion of s are inevitably going to be -like to some etent.nnhus, the distinction is more of a fluid one and hinges on emphasis to what etent are dividends the main point, and to what etent is it about earning tokens by participation lso, to what etent does the concept of a “share” eist as opposed to simple virtual property or eample, a membership on a nonprofit board is not really a share, because membership frequently gets granted and confiscated at will, something which would be unacceptable for something classified as investable property, and a bitcoin is not a share because a bitcoin does not entitle you to any claim on profits or decision-making ability inside the system, whereas a share in a corporation definitely is a share. n the end, perhaps the distinction might ultimately be the surprisingly obscure point of whether or not the profit mechanism and the consensus mechanism are the same thing.nnhe above definitions are still not close to complete there will likely be gray areas and holes in them, and eactly what kind of automation a  must have before it becomes a  is a very hard question to answer. dditionally, there is also the question of how all of these things should be built. n , for eample, should likely eist as a network of private servers, each one running often proprietary local code, whereas a  should be fully open source and blockchain-based. etween those two etremes, there is a large number of different paradigms to pursue. ow much of the intelligence should be in the core code hould genetic algorithms be used for updating code, or should it be futarchy or some voting or vetting mechanism based on individuals hould membership be corporate-style, with sellable and transferable shares, or nonprofit-style, where members can vote other members in and out hould blockchains be proof of work, proof of stake, or reputation-based hould s try to maintain balances in other currencies, or should they only reward behavior by issuing their own internal token hese are all hard problems and we have only just begun scratching the surface of them.
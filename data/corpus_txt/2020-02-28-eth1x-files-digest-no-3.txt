Titre: The 1.x Files: February call digest\nAuteur: Griffin Ichiba Hotchkiss\nDate: February 28, 2020\nURL: https://blog.ethereum.org/2020/02/28/eth1x-files-digest-no-3\nCatégorie: Non catégorisé\n\n==================================================\n\nebruary th tldc (too long, didn't call)nnisclaimernnhis is a digest of the topics discussed in the recurring th. research call, and doesn’t represent finalized plans or commitments to network upgrades.nnhe main topics of this call werennhe rough plan for the . research summit in aris following thnnhe itness ormatnnhe 'data retrieval problem'nnogisticsnnhe summit to discuss and collaborate on tateless thereum is planned for the weekend following th, which will be an indispensable time for working on the most important and unsolved problems for this effort.nnhe schedule is not fied yet, but a rough outline is coming togethernnaturdaynn- fter an hour of breakfast and free discussion, we'll come together to agree on goals and scope for the summit. hen there is about  hours reserved for organized presentations and 'deep dives' on particular topics of importance. n the later afternoon/evening there will be another hour+ of free time and informal discussion.nnundaynn- he same as before, but with only  hours of structured presentations, to encourage attendees to break out into groups and work on the various research or implementation topics for the rest of the ummit. inally, there will be a concluding discussion to map out net steps and revise the tech tree.nnt should be stated that this research summit is not focused on public or general engagement, in favor of making meaningful progress on the work ahead. his is not meant to be a spectator's event, and indeed there is some epectation that attendees will have 'done their homework' so that the short amount of time for discussion is efficiently spent.nnechnical discussionnnitness ormatnnhe first topic of technical discussion was centered around the recently submittednndraft witness specificationnn, which will help to define implementation for all client teams.nnhe witness specification is really comprised of two parts emantics and ormat. his organization has the desirable property of cleanly separating two aspects of the witness that might have different goals.nnemantics are a bit harder to get to grips with, and are concerned merely with the abstract methods of taking one group of objects and transforming them into other objects. he witness semantics are in simple formal language describing how to get from inputs to outputs, leaving all implementation details abstracted away. or eample, questions about data serialization or parsing are not relevant to the witness semantics, as they are more of an implementation detail. he high-level goal of defining the semantics of witnesses in a formal way is to have a completely un-ambiguous reference for client teams to implement without a lot of back-and-forth. dmittedly, starting with formal semantics and working towards implementation (rather than say, coding out a reference implementation) is eperimental, but it's hoped that it will save effort in the long run and lead to much more robust and diverse tateless thereum implementations. ormat is much more concrete, and specifies real details that affect interoperability between different implementations.nnhe witness format is where things like the size of code chunks will be defined, and a good witness format will help different implementations stay inter-operable, and in general terms describes encoding and decoding of data. he format is not specifically geared at reducing witness size, rather at keeping the client implementations memory-efficient, and maimizing the efficiency of generation and transmission. or eample, the current format can be computed in real time while walking through the state trie without having to buffer or process whole chunks, allowing the witness to be split into small chunks and streamed.nns a first draft, there is epected to be some refactoring before and after aris as other researchers give feedback, and already there is a request for a bit more content on design motivations and high-level eplanation concerning the above content. t was also suggested in the call that the witness format be written in about in an upcoming "he  iles" post, which seems like a great idea (stay tuned for that in the coming weeks).nnransaction validation, an interludennoving towards less concrete topics of discussion, one fundamental issue was brought up in the chat that warrants discussion  potential problem with validating transactions in a stateless paradigm.nnurrently, a node performs two checks on all transactions it sees on the network. irst, the transaction nonce is checked to be consistent with all transactions from that account, and discarded if it is not valid. econd the account balance is checked to ensure that the account has enough gas money. n a stateless paradigm, these checks cannot be performed by anyone who does not have the state, which opens up a potential vector for attack. t's eminently possible that the format of witnesses could be made to include the minimum amount of state data required to validate transactions from witnesses only, but this needs to be looked into further.nnhe transaction validation problem is actually related to a more general problem that tateless thereum must solve, which is tentatively being called "he data retrieval problem". he solution for data retrieval will also solve the transaction validation problem, so we'll turn to that now.nnata retrieval in tateless thereumnnhe full scope of this challenge is outlinednnin an ethresearch forum postnn, but the idea relatively straightforward and built from a few assumptionsnnt's possible to, within the currentnnethnnprotocol, build a stateless client using eisting network primitives. his isnnsort ofnnwhat beam sync is, with the important distinction that beam sync is meant to keep state data and 'backfill' it to eventually become a full node.  stateless client, by contrast, throws away state data and relies entirely on witnesses to participate in the network.nnhe current protocol and network primitives assume that there is a high probability that connected peers keep valid state, i.e. that connected peers are full nodes. his assumption holds now because most nodes are indeed full nodes with valid state. ut this assumption cannot be relied upon if a high proportion of the network is stateless. he current protocol also doesnnnotnnspecify a way for a new connected node to see if a connected peer has or does not have a needed piece of state data.nntateless clients have better  than full nodes. hey will sync faster, and allow for near instantaneous connection to the network. t's therefore reasonable to assume that over time more and more nodes will move towards the stateless end of the spectrum. f this is the case, then the assumption of data availability will become less and less sound with a higher proportion of stateless nodes on the network. here is a theoretical 'tipping point' where stateless nodes outnumber stateful nodes by far, and a random assortment of peers has a sufficiently low probability of at least one holding the desired piece of state. t that (theoretical) point, the network breaks.nnhe kicker here is thatnnif the network allows state to be gotten on demand (as it does now), a stateless client can (and will) be made on the same protocolnn. tending this reasoning to be more dramatic tateless clients are inevitable, and the data retrieval problem will come along with them. t follows then, that significant changes to thennethnnnetwork protocol will need to be made in order to categorically prevent the network from reaching that tipping point, or at least push it further away through client optimizations.nnhere are a lot of open-ended topics to discuss here, and importantly there is disagreement amongst the  researchers about eactly how far the network is from that theoretical breaking point, or if the breaking point eists at all. his highlights the need for more sophisticated approaches to network simulation, as well as the need for defining the problem clearly at the research summit before working towards a solution.nnÀ tout à l’heure !nnciting things will undoubtedly be unfolding as a result of the in-person research to be conducted in aris in the coming fortnight, and the net few installments of "he . iles" will be devoted to documenting and clearly laying out that work.nnhe summit in aris is very nearly at full capacity, so if you have not filled out the  form to attend please get in touch with iper to see if there is space.nns always, if you're interested in participating in the tateless thereum research effort, come join us on ethresear.ch, get invited to the telegram group, and reach out to gichiba and/or ancock on twitter.
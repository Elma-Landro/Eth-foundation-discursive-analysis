Titre: Validated, staking on eth2: #6 - Perfect is the enemy of the good\nAuteur: Carl Beekhuizen\nDate: December 10, 2020\nURL: https://blog.ethereum.org/2020/12/10/validated-perfect-is-the-enemy-of-the-good\nCat√©gorie: Non cat√©goris√©\n\n==================================================\n\n'was the day before genesis, when all was prepared,nngeth wasnninnnsync, my beaconnnnodennpaired.nnirewalls configured, s galore,nnhours of preparation meant nothing ignored.nnhen all at once everything went awry,nnthe nninnnmy system decided to die.nny configs were gone, chain data was history,nnnothing tonndonnbut trustnninnnnet day delivery.nn found myself designing backups and redundancies.nnomplicated systems consumed my fantasies.nnhinking further  came to realisennworrying about these kinds of failures was quite unwise.nnventsnnhe beacon chain has several mechanisms to incentivise validator behaviour, all of which are dependant on the current status of the network, so it is vital to consider these failure cases in the greater contet of how other validators might fail when deciding what are, and what aren't, worthwhile ways of securing your node(s).nns an active validator, your balance either increases or decreases, it never goes sideways*. herefore a pretty reasonable way of maimising your profits, is to minimise your downsides. here are  ways your balance can be reduced by the beacon chainnnenaltiesnnare issued when your validator misses one of their duties (e.g. because they are offline)nnnactivity eaksnnare handed out to validators that miss their duties while the network is failing to finalise (i.e. when your validator being offline is highly correlated with other validators being offline)nnlashingsnnare given to validators who produce blocks or attestations that are contradictory and therefore could be used in an attacknn* n average, a validator's balance may stay the same, but for any given duty, they are either rewarded or punished.nnorrelationnnhe effect of a single validator being offline or performing slashable behaviour is small in terms of the overall health of the beacon chain. t is therefore not punished heavily. n contrast, if many validators are offline, the balance of offline validators can decrease much more rapidly.nnimilarly, if many validators perform slashable actions at the same time, from the beacon chain's perspective, this is indistinguishable from an attack. t is therefore treated as such, and % of the offending validators' stake is burned.nnecause of these "anti-correlation" incentives, validators should worrynnmorennabout failures that might affect others at the same time rather than isolated, individual issues.nnauses and their probability.nno let's think through some failure cases and eamine them through the lens of how many others would be affected at the same time, and how badly your validators would be punished.nn disagree with econoarnnherennthat these arennworst casennissues. hese are more moderate level issues. ome  and ual  address failures aren't correlated with other users and so should be far down your list of concerns.nnüåç nternet/power failurennf you are validating from home, then it's highly likely you'll encounter one of these failures at some point in the future. esidential internet and power connections do not have guaranteed uptime. owever, when the internet does go down, or your power is out, the outage is usually limited to your area and even then only for a few hours.nnnless you havennverynnspotty internet/power, it might not be worthwhile paying for fall-over connections. ou'll receive a few hours of penalties, but as the rest of the network is running normally, your penalties will be roughly equal to what your rewards would have been over the same period. n other words, annknnhour-long failure sets your validator's balance back to roughly where it wasnnknnhours before the failure, and innnknnadditional hours your validator's balance will be back to its pre-failure amount.nnnnalidator #nnregaining  as quickly as it was lost -nneaconcha.innnüõ† ardware failurennike internet failure, hardware failure strikes randomly, and when it does, your node might be down for a few days. t is valuable to consider the epected rewards over the lifetime of the validator versus the cost of redundant hardware. s the epected value of the failure (the offline penalties times the chance of it happening) greater than the cost of the redundant hardwarennersonally, the chance of failure is low enough and the cost of fully redundant hardware high enough, that it almost certainly isn't worth it. ut then again,  am not a whale üê≥  as with any failure scenario, you need to evaluate how this applies to your particular situation.nn‚òÅÔ∏è loud services failurennaybe, to avoid the risks of hardware or internet failure altogether, you decide to go with a cloud provider.nnith a cloud provider, you have introduced the risk of correlated failures.nnhe question that matters is,nnhow many other validators are using the same cloud provider as younn week before genesis,nnmazon  had a prolonged outagennwhich affected a large portion of the web. f something similar were to happen now, enough validators would go offline at the same time that the inactivity penalties would kick in.nnven worse, if a cloud provider were to duplicate the  running your node and accidentally leave the old and the new node running at the same time, you could be slashed (the penalties incurred would be especially bad if this accidental duplication affected many other nodes too).nnf you are insistent on relying on a cloud provider, consider switching to a smaller provider. t may end up saving you a lot of .nnü•© taking ervicesnnhere arennseveral staking servicesnnon mainnet today with varying degrees of decentralisation, but they all contain an increased risk of correlated failures if you trust them with your . hese services are necessary components of the eth ecosystem, especially for those with less than   or without the technical know-how to stake, but they are architected by humans and therefore imperfect.nnf staking pools eventually grow to be as large as eth mining pools, then it is conceivable that a bug could cause mass slashings or inactivity penalties for their members.nnüîó nfura ailurennast month nfura went down for  hoursnncausing outages across the thereum ecosystem it is easy to see how this is likely to result in correlated failures for eth validators.nnn addition, rd party eth  providers necessarily rate-limit calls to their service n the past this has caused validators to be unable to produce valid blocks (on the edalla testnet).nnhe best solution is to run your own eth node you won't encounter rate-limiting, it will reduce the likelihood of your failures being correlated, and it will improve the decentralisation of the network as a whole.nnth clients have also started adding the possibility of specifying multiple eth nodes. his makes it easy to switch to a backup endpoint, in the event your primary endpoint fails (ighthousenn--eth-endpointsnn, rysmnn#nn, imbus & eku will likely add support somewhere in the future).nn highly recommend adding backup  options as cheap/free insurance (nnthereumodes.comnnshows the free and paid  endpoints and their current status). his is useful whether you are running your own eth node or not.nnü¶è ailure of a particular eth clientnnespite all the code review, audits, and rockstar work, all of the eth clients have bugs hiding somewhere. ost of them are minor and will be caught before they present a major problem in production, but there is always the chance that the client you choose will go offline or cause you to be slashed. f this were to happen, you would not want to be running a client with  / of the nodes on the network.nnou must strike a tradeoff between what you deem to be the best client vs how popular that client is. onsider reading through the documentation of another client so that if something happens to your node, you know what to epect in terms of installing and configuring a different client.nnf you have lots of  at stake, it is probably worth running multiple clients each with some of your  to avoid putting all your eggs in one basket. therwise,nnouchnnis an interesting offering for multi-node staking infrastructure, andnnecret hared alidatorsnnare seeing rapid development.nnü¶¢ lack swansnnhere are of course many unlikely, unpredictable, yet dangerous scenarios that will always present a risk. cenarios that lie outside the obvious decisions about your staking set-up. amples such asnnpectrennandnneltdownnnat the hardware level, or kernel bugs such asnnleedingoothnnhint at some of the hazards that eist across the entire hardware stack. y definition, it is not possible to entirely predict and avoid these problems, instead you generally must react after the fact.nnhat to worry aboutnnltimately this comes down to calculating the epected valuenn()nnof a given failure how likely an event is to happen, and what the penalties would be if it did. t is vital to consider these failures in the contet of the rest of the eth network since the correlation greatly affects the penalties at hand. omparing the epected cost of a failure to the cost of mitigating it will give you the rational answer as to whether it is worth getting in front of.nno one knows all the ways a node can fail, nor how likely each failure is, but by making individual estimates of the chances of each failure type and mitigating the biggest risks, the "wisdom of the crowd" will prevail and on average the network as a whole will make a good estimate. urthermore, because of the different risks each validator faces, and the differing estimates of those risks, the failures you did not account for will be caught by others and therefore the degree of correlation will be reduced.nnay decentralisation!nnüìï ' nninally, if something does happen to your node, don't panic! ven during inactivity leaks, penalties are small on short time scales. ake a few moments to think through what happened and why. hen make a plan of action to fi the problem.nnhen take a deep breath before you proceed.nnn etra  minutes of penalties is preferable to being slashed because you did something ill-advised in a rush.nnost of all üö®nno not run  nodes with the same validator keys!nnüö®nnhanks anny yan, oseph chweitzer, and acha ves aint-eger for reviewnnlashings because validators ran  node -nneaconcha.innn]
Titre: Ropsten Merge Announcement\nAuteur: Protocol Support Team\nDate: May 30, 2022\nURL: https://blog.ethereum.org/2022/05/30/ropsten-merge-announcement\nCat√©gorie: Non cat√©goris√©\n\n==================================================\n\nopsten will be the first longstanding testnet to run through he ergenn new opsten eacon hain was launched on ay ,  to provide consensus to the networknnhe opsten eacon hain will upgrade to merge-compatible protocol rules (ellatri) at slotnnnn, epected on une , nnfter this, annerminal otal ifficulty ()nnwill be chosen to activate he erge on the proof-of-work chain. ode perators will need to manually set this value on their clients.nnune  updatennthe eact erminal otal ifficulty for the opsten erge isnnnn. nnsubsequent announcementnneplains how node operators and stakers can ensure their clients are ready for the upgrade. lease update your client‚Äôs  before une , .nnackgroundnnfter years of work to bring proof-of-stake to thereum, we are now entering the final testing stage testnet deployments!nnaving tested client implementations onnnintsugi üçµnn,nniln üî•üß±nnand manynnshadow forksnn, client teams are now ready to run opsten -- the oldest proof-of-work testnet -- through he erge. n preparation, a opsten eacon hain has been launched to provide consensus to the network.nnfter the opsten transition, two more testnets (oerli and epolia) will be transitioned to proof-of-stake before focus shifts to mainnet. ther testnets, such as inkeby and ovan, may be maintained and upgraded separately by the community but will no longer be monitored by client developers.nnhe erge is different from previous thereum upgrades in two ways. irst, node operators need to update both their consensus and eecution layer clients in tandem, rather than just one of the two. econd, the upgrade activates in two phases the first at a slot height on the eacon hain and the second upon hitting annotal ifficultynnvalue on the eecution layer.nniven these circumstances, the opsten network, which is intended to be deprecated after he erge, will run through the upgrade earlier in the development process than previous network upgrades. his will give the community more time to become familiar with the upgrade process.nnotenn lient releases listed below willnnnotnnbe suitable for the thereum mainnet's transition to proof-of-stake.nnpgrade nformationnnimingnnhe ergennis a two-step process. t starts with a network upgrade on the consensus layer, triggered by a slot height. his is followed by the eecution layer's transition from proof-of-work to proof-of-stake, triggered by a specificnnotal ifficultynnthreshold, called thennerminal otal ifficultynn(nnnn).nnnnnune , nn, at slotnnnn, thennellatrinnupgrade will prepare the opsten eacon hain for he erge. t that point,  clients will begin listening for annnnvalue to be hit on the proof-of-work chain.nnecause the hash rate of proof-of-work testnets is very volatile, thennnnvalue will first be set to an eceedingly high value,nnnn. t opsten's current hash rate, it would take ~ years to reach it.nnnce the ellatri upgrade has happened on the eacon hain, a newnnnnvalue, which is epected to be reached a few days later, will be chosen and announced.nnsers will then need to configure their node with this new value. nstructions for doing so with each client are availablennherenn.nnhen this newnnnnis hit or eceeded on opsten, the eecution layer part of the transition, codenamednnarisnn, will start. gain, note that hash rate on opsten is notoriously variable, so the actual time at which thennerminal otal ifficultynntakes place may fluctuate.nnnce the eecution layer has eceeded thennnn, the net block will be solely produced by a eacon hain validator. e consider he erge to have been completed once the eacon hain has finalized this block. ssuming normal network conditions, this should happen  epochs, or approimately  minutes, after the first post- block is hit!nn new - block tag,nnfinalizednn, returns the latest finalized block or an error if no such post-merge block eists. his tag can be used for applications to check if he erge has been completed. imilarly, smart contracts cannnquery thennnnopcode (nnnn)nn, renamed tonnnnpost-merge, to determine if he erge has happened. e recommend infrastructure providers monitor overall network stability in addition to finalization status.nnlient eleasesnnhe following client releases support he erge on the opsten testnet. ode operators must runnnbothnnan eecution and consensus layer client to remain on the network during and after he erge.nns mentioned above, the following releases have a hardcodednnerminal otal ifficultynnvalue ofnnnnwhich will need to be manually updated after the ellatri upgrade has been activated on the eacon hain.nnhen choosing which client to run, validators should be especially mindful of the risks of running a majority client on both the  and . n eplainer of these risks and their consequences can be foundnnherenn. n estimate of current  and  client distribution and guides for switching from one client to another can be foundnnherenn.nnotenn if you had previously downloaded a client release with a opsten  ofnnnn, you must either update your release or manually override the  tonnnnas specifiednnherenn.nnonsensus ayernnamennersionnninknnighthousennaby izard (..)nnownloadnnodestarnnee "odestar ote" belownnee "odestar ote" belownnrysmnnv..-rc.nnownloadnnimbusnnv..nnownloadnnekunnv..nnownloadnnodestar otennthe latest odestar release,nnv..nn, has an outdated opsten  value ofnnnn. o be compatible with the opsten erge, which now uses a  ofnnnn, odestar users will need to manually override this value. nstructions about doing so can be found on the team'snnrelease announcement postnn.nnecution ayernnamennersionnninknnesunnv..nnownloadnnrigonnnv..-alphannownloadnngo-ethereum (geth)nnee "eth ote" belownnee "eth ote" belownnethermindnnv..nnownloadnneth otennthe latest go-ethereum (geth) release,nnharblu (v..)nn, has an outdated opsten  value ofnnnn. o be compatible with the opsten erge, which now uses a  ofnnnn, geth users must eithernnuild from source on the latestnnmasternnbranchnnse the latestnnocker imagennanually override the , by running the following command when starting the clientnn--override.terminaltotaldifficulty .nnpgrade pecificationsnnonsensus-critical changes for he erge are specified in two placesnnhe consensus layer changes, under thennbellatrinndirectorynnof the consensus-specs repositorynnhe eecution layer changes, under thennarisnnspecnnin the eecution-specs repositorynnn addition to these, two other specifications cover how the consensus and eecution layer clients interactnnhe ngine , specified in thenneecution-apis repositorynn, is used for communication between the consensus and eecution layersnnptimistic ync, specified in thennsyncnnfolder of the consensus-specs repository, is used by the consensus layer to import blocks as the eecution layer client is syncing and to provide a partial view of the head of the chain from the former to the latternnnns a node operator, what should  donnost-merge, an thereum full node will combine a consensus layer client, which runs the proof-of-stake eacon hain, and an eecution layer client, which manages the user-state and runs the computations associated with transactions. hese communicate over an authenticated port using a new set of   methods called thennngine nn. he  and  client authenticate each other using a  secret.nnode operators should refer to their clients' documentation for instructions about how to generate and configure these.nnn other words, if you were already running a node on the eacon hain, you now also need to run an eecution layer client. imilarly, if you were running a node on the current proof-of-work network, you will need to run a consensus layer client. or them to communicate securely, a  token must be passed to each client.nnt is worth emphasizing that while they are both part of consensus layer client releases, running a eacon ode is distinct from running a alidator lient. takers must run both, but node operators only need the former.nnhis postnneplains the difference between both components in more detail.nnlso, note that each layer will maintain an independent set of peers and epose its own s. henneaconnnandnn nns will both continue working as epected.nninally, remember to check back on une rd for an announcement on this blog of the final opsten  value.nns a staker, what do  need to donns eplained above,nnvalidators on the eacon hain will need to run an eecution layer client after he erge, in addition to their consensus layer clients.nnre-merge, this was strongly recommended, but validators could have outsourced these functions to third-party providers. his was possible because the only data required on the eecution layer were updates to the deposit contract.nnost-merge, validators need to ensure that transactions in blocks that they create and attest to are valid. o do this, each beacon node must be paired with an eecution layer client. ote that multiple validators can still be paired to a single beacon node & eecution layer client combo. hile this epands validators' responsibilities, it also gives a validator who proposes a block the right to its associated transaction priority fees (which currently go to miners).nnhile validator rewards accrue on the eacon hain and will require a subsequent network upgrade to be withdrawn, transaction fees will continue to be paid, burned, and distributed on the eecution layer. alidators can specify any thereum address as a recipient for transaction fees.nnfter updating your consensus client, be sure to set thennfee recipientnnas part of your validator client configurations to ensure transaction fees are sent to an address you control.nnf you have staked using a third-party provider, it is up to your selected provider to specify how these fees are allocated.nnestnet upgrades are the last chance for validators to ensure their setups work as epected and resolve issues. nformation about running a validator on the opsten eacon hain in preparation for he erge can be found on thennopsten staking launchpadnn.nne strongly recommend that mainnet validators run through he erge on opsten and other testnets before the thereum mainnet transitions to proof-of-stake.nns an application or tooling developer, what should  donnith he erge going live on opsten, now is the time to ensure that your product works as epected through the proof-of-stake transition and in a post-merge contet. s eplained in annprevious postnn, he erge will have only minimal impact on a subset of contracts deployed on thereum, none of which should be breaking. dditionally, the lion's share of user  endpoints remain stable (unless you use proof-of-work specific methods such asnneth_getorknn).nnhat said, most applications on thereum involve much more than on-chain contracts.nnow is the timennto ensure that your front-end code, tooling, deployment pipeline and other off-chain components work as intended. e strongly recommend that developers run through a complete testing & deployment cycle on opsten (ornnilnnn) and report any issues with tools or dependencies to those projects' maintainers. f you are unsure where to open an issue, please usennthis repositorynn.nns an thereum user or ther holder, is there anything  need to donno. he thereum mainnet is not affected by this testnet. ubsequent announcements will be made on this blog before mainnet's transition.nns a miner, is there anything  need to donno. f you are mining on the thereum mainnet or opsten, you should be aware that each network will operate entirely under proof-of-stake after he erge. t that point, mining will no longer be possible on the network.nnhis is epected around une ,  on opsten and later this year for the thereum mainnet.nns a validator, can  withdraw my stakenno. he erge is the most complicated upgrade to thereum to date. o minimize risks of network disruptions, a minimal approach was taken which ecluded any non-transition changes from this upgrade.nnithdrawals from the eacon hain will likely be introduced in the first upgrade after he erge. pecifications for both thennconsensusnnandnneecutionnnlayers are in progress.nn have more questions, where can  ask themnnnnerge ommunity allnnis scheduled for une ,  . lient developers and researchers will be available to answer questions from node operators, stakers, infrastructure & tooling providers and community members.nnwen mergenns of the publication of this post, the date for the thereum mainnet proof-of-stake transition hasnnnotnnbeen set. ny source claiming otherwise is likely to be a scam. pdates will be posted on this blog. lease stay safe!nnssuming no issues are found with opsten, once client testing is complete, thereum's other testnets, will run through he erge. nce oerli and epolia have successfully transitioned and stabilized, a slot height will be chosen for the ellatri upgrade on the eacon hain and anndifficulty valuennwill be set for the mainnet transition. lients will then make releases that enable he erge on mainnet. hese will be announced on this blog and in other community publications.nnhis assumes no issues are found. owever, if issues are found at any point in the process or test coverage is judged to be insufficient, these things will be addressed before continuing with the deployment process.nnnly then will it be possible to estimate the eact date for he erge.nnn other words, üîú.
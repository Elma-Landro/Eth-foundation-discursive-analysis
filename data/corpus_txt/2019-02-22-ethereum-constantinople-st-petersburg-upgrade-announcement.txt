Titre: Ethereum Constantinople/St. Petersburg Upgrade Announcement\nAuteur: Hudson Jameson\nDate: Jameson on February 22, 2019\nURL: https://blog.ethereum.org/2019/02/22/ethereum-constantinople-st-petersburg-upgrade-announcement\nCatégorie: Non catégorisé\n\n==================================================\n\nhe thereum network will be undergoing a scheduled upgrade atnnblock number ,,nn, which is predicted to occur onnnhursday, ebruary , nn. he eact date is subject to change depending on block times between now and then and could be activated - days before or after.  countdown timer can be seen atnnhttps//amberdata.io/blocks/nn. ou can monitor the network upgrade in real time atnnhttp//forkmon.ethdevops.io/nn.nnhat is onstantinople and t. etersburgnnonstantinople and t. etersburg are the names given to this network upgrade. revious network upgrades have been given other names such asnnpurious ragonnnandnnyzantiumnn. he reason that this network upgrade has two names is becausennthe original onstantinople network upgrade was postponednnand two protocol upgrades will need to occur on the same block number in order to fi issues on various thereum test networks, such as opsten.nns an thereum user or ether holder is there anything  need to donnf you use an echange (such as oinbase, raken, or inance), a web wallet service (such as etamask, yrypto, or ytherallet), a mobile wallet service (such as oinbase allet, tatus.im, or rust allet), or a hardware wallet (such as edger, rezor, or eepey) you do not need to do anything unless you are informed to take additional steps by your echange or wallet service.nns a node operator or miner, what do  need to donnownload the latest version of your thereum clientnnatest geth client (v..)nnatest arity client (v..-stable)nnatest armony client (v. uild )nnatest antheon client (v..)nnatest thereum  client (v..)nnatest version of ethermind client (v..)nnatest version of rinity client (v..-alpha.)nnatest version of thereum allet/ist (v..)nnhat happens if  am a miner or node operator and  do not participate in the upgradennf you are using an thereum client that is not updated to the latest version (listed above), your client will sync to the pre-network upgrade blockchain once the upgrade occurs. ou will be stuck on an incompatible chain following the old rules and you will be unable to send ether or operate on the post-upgrade thereum network.nnhat is a network upgrade in thereum-landnn network upgrade is a change to the underlying thereum protocol, creating new rules to improve the system. he decentralized nature of blockchain systems makes a network upgrade more difficult. etwork upgrades in a blockchain require cooperation and communication with the community, as well as with the developers of the various thereum clients in order for the transition to go smoothly.nnhat happens during a network upgradennfter the community comes to an agreement concerning which changes should be included in the upgrade, changes to the protocol are written into the various thereum clients, such as geth, arity, and armony. he protocol changes are activated at a specific block number. ny nodes that have not been upgraded to the new ruleset will be abandoned on the old chain where the previous rules continue to eist.nnhat changes are going into onstantinoplennhanges that are implemented in onstantinople are defined using s. thereum mprovement roposals (s) describe standards for the thereum platform, including core protocol specifications, client s, and contract standards. he following s will be implemented in onstantinople.nn  itwise shifting instructions in nnrovides native bitwise shifting with cost on par with other arithmetic operations.nn is lacking bitwise shifting operators, but supports other logical and arithmetic operators. hift operations can be implemented via arithmetic operators, but that has a higher cost and requires more processing time. mplementing  and  using arithmetics cost each  gas, while these proposed instructions take  gas.nnn short his  adds native functionality to protocol so that it is cheaper & easier to do certain things on chain.nn  kinny nndds a new opcode at f, which takes  stack arguments endowment, memory_start, memory_length, salt. ehaves identically to , ecept using keccak( ff ++ address ++ salt ++ keccak(init_code)))] instead of keccak((sender_address, nonce))] as the address where the contract is initialized at.nnhis allows interactions to be made with addresses that do not eist yet on-chain but can be relied on to only possibly contain code eventually that has been created by a particular piece of init code.nnmportant for state-channel use cases that involve counterfactual interactions with contracts.nnn short his  makes it so you can interact with addresses that have yet to be created.nn   opcodennhis  specifies a new opcode, which returns the keccak hash of a contract's code.nnany contracts need to perform checks on a contract's bytecode, but do not necessarily need the bytecode itself. or instance, a contract may want to check if another contract's bytecode is one of a set of permitted implementations, or it may perform analyses on code and whitelist any contract with matching bytecode if the analysis passes.nnontracts can presently do this using the  opcode, but this is epensive, especially for large contracts, in cases where only the hash is required. s a result, a new opcode is being implemented called  which returns the keccak hash of a contract's bytecode.nnn short his  makes it cheaper (less gas is needed) to do certain things on chain.nn  onstantinople ifficulty omb elay and lock eward djustmentnnhe average block times are increasing due to the difficulty bomb (also known as the "ice age") slowly accelerating. his  proposes to delay the difficulty bomb for approimately  months and to reduce the block rewards to adjust for the ice age delay.nnn short his  make sure we don’t freeze the blockchain before proof of stake is ready & implemented.nnhat changes are going into t. etersburgnnefore thereum performs network upgrades on the main network, test networks, such as opsten, are upgraded to test the changes. he original onstantinople changes, listed in this blog post, were applied to test networks before the postponement and require a nd network upgrade to reverse the original onstantinople changes. his is called t. etersburg and it occurs on the same block number as onstantinople.nnhe following  was removed from test networks using the t. etersburg network upgradennnn  et gas metering for  without dirty mapsnnhank ou!nn big thanks to the thereum community, and to all thereum developers across all clients and platforms who came together to provide input, thoughts, and contribution. pecial thanks to eddit user cartercarlson who let us usennhis eddit postnnand thennyryptonnteam who let us use their "nnthereum onstantinople verything ou eed o nownn" edium post.nnnn his is an emergent and evolving highly technical space. f you choose to implement the recommendations in this post and continue to participate, you should make sure you understand how it impacts you. ou should understand that there are risks involved including but not limited to risks like unepected bugs. y choosing to implement these recommendations, you alone assume the risks of the consequences. his post and recommendations are not a sale of any kind and do not create any warranties of any kind including but not limited to any relating to the thereum network or the thereum clients referred to herein.
Titre: What is Ethereum? Project, Platform, Fuel, Stack.\nAuteur: Joseph Lubin\nDate: May 14, 2014\nURL: https://blog.ethereum.org/2014/05/14/what-is-ethereum-project-platform-fuel-stack\nCatégorie: Non catégorisé\n\n==================================================\n\nhat is thereum, the rojectnnhe thereum roject is an open source, community-driven effort designed to create a net-generation distributed application platform intended to be maimally fleible and powerful in the possibilities that it enables.nnhat is thereum, the latformnnhe thereum latform combines a generalized peer-to-peer networking platform with net-generation blockchain architecture to deliver a decentralized consensus-based (decentcon), full-stack platform for developing, offering and using distributed application services.   consumer-facing application, called the therrowser, integrates the front and back ends to create an environment in which anyone can easily and rapidly build highly secure, scalable and interoperable decentralized applications.nnike the itorrent content sharing system, thereum network nodes will run on thousands of computers around the world and, short of shutting down the nternet, its operations cannot be halted.  his is because peer-to-peer systems generally involve a very large number of independent actors (people or organizations) each running the peer node software on one or more computers.  n the itcoin system, these nodes are called “miners.”nnike itcoin, in thereum, the nodes on the network serve as miners whose purpose is to process and validate the transactions and computations on the system and quickly achieve a consensus regarding what happened on the system and when.  his consensus is what provides the network with its security.  he larger the number of nodes there are and the more work these nodes have to do to eercise a vote regarding what transpired on the network, the greater is the sense that this shared consensus view of the history of the system is a canonical and irrepudiable representation.  n thereum, miners receive a reward for doing the work required to inform and enable their vote and they are also paid for providing resources to the network in the form of bandwidth, storage and computational processing.nnitcoin is a system for securely transmitting and storing value.  s such, it can serve as the financial bedrock of the emerging global decentcon economy.   conservative, prudent, development roadmap for itcoin will make it easier to use and further secure the protocol against quirks and edge cases that might be eploited in the future (though it has thus far proven to be remarkably solid at the protocol level).  n contrast, as a platform for hosting distributed or decentralized applications (Ðpps — spelled with the capital letter “eth” and pronounced “dapps” or “eth-apps” by the cognoscenti -) ) and services, thereum must be agile and forward moving.  n  of , the thereum team will deliver a feature-rich system that will be fully functional and will possess a rich user interface and deliver a compelling user eperience for both end users and businesses building Ðpps and offering services on the platform.  ut technology moves fast, so thereum will require an upgrade roadmap and continual development.nnhat is ther, the ryptofuelnnust as the itcoin system has a token, called a bitcoin (lower case) that serves as the medium of echange, thereum has ether () which serves as a unit of echange to some degree, but more importantly, it serves as a fuel that powers applications on the thereum system.nnhe engineers of the thereum roject are building a computational device or appliance, in the form of a software program, that anyone can download and run on their computer, smart phone, or on dedicated, fast hardware.  n order to operate this software appliance a certain type of token is required as fuel in appropriate quantities.nnistributed applications on thereum require payments of this token to fuel every computational and storage operation on the system. ithout requiring payments for operations, the system would be vulnerable to many sorts of attacks and would not be viable or secure. he payments are made to owners of computational resources in echange for securing the thereum network, for transmitting transactions, for storing data and for processing computations required by distributed software applications.nneople and businesses are interested in purchasing  to power their own business applications, to make use of business applications offered by other service providers, to trade on forthcoming echanges, or to speculatively hold for future sale to people and businesses.   may be purchased in the enesis ale (details forthcoming, please watch this space), on forthcoming rd-party echanges and s, and on echanges that are implemented as pps on thereum.nnhen purchasing  in the enesis ale, the buyer is supporting the development of the product, just as with a kickstarter campaign. hen the product is completed and ready for delivery, buyers will be able to claim their purchased  from the genesis block — the root block of the thereum blockchain.nnhat is thereum, the oftware tacknn software stack is a set of technologies, realized at different layers and levels of abstraction and possessing different complementary capabilities that work well together to enable a software development team to build a full, back-end to front-end software service for an end user.  thereum provides a full-stack solution for developing and delivering Ðpps, the front end of which may be accessed by an end user from a web page, dedicated front-end applications, or more commonly from the thereum Ðpp rowser.  he thereum stack is the first of its kind to enable developers to deliver decentcon software applications.nnhen delivering an Ðpp the developer or deployer of that Ðpp does not arrange hosting of back-end server processes as with traditional software services.  ather, the code is embedded as payload in a transaction on the thereum network and sent to one or more mining nodes on the network.  iners that receive the transaction will broadcast it to all of the peers that they are aware of, provided the transaction sender has included enough , the cryptofuel that powers operations on the system, to pay for the transaction.  his transaction diffuses through the network, peer to peer, and eventually is packaged into a block and locked into the blockchain.  locks are created by miners approimately once per minute.  nce the transaction with the code payload is embedded into a block, subsequent transactions can be sent to an address that is designated as the controller interface for that Ðpp to invoke processing of the Ðpp.nnhen an end user wishes to activate one or more services offered by this Ðpp, she will typically interact with a front-end user interface, loaded into the Ðpp rowser (probably t-based or avacript//) to trigger desired actions.  ser interface components will be cached on some kind of decentralized itorrent-like cloud and pulled in by the Ðpp rowser as needed. he user interface will formulate thereum transactions and send these, with a suitable amount of the cryptofuel and any input data required, to the address of the controller interface of the Ðpp.  nce collected into a block, the transaction will trigger eecution of the Ðpp and the states of various components (called contracts) of the Ðpp will transition to a result state.   peer-to-peer fast messaging protocol, will enable the user interface to reflect such changes, and will facilitate communication among different pps and among users.nnne thing to notice is that, from the perspective of application hosting, there is virtually nothing to be done.  he back end is launched into the blockchain “cloud” and the front end will usually be represented as a installable tile in the thereum Ðpp rowser.  he end user will download the browser once and the browser will receive continual updates from itorrent or a itorrent-like distribution system.  hile browsing the distributed Ðpp catalog in the browser, the end user can install any Ðpp of interest in her browser with a no cost, one-click installation.  hese tiles will be organized categorically by users and each will be invokable into in a full blown, user interface “responsively” sized and configured to the dimensions and capabilities of the browser (some weaker devices may have limitations).nnhe programming paradigm just described will be very unusual in comparison to typical development technologies and will require innovative (and perhaps sometimes kludgey) approaches.  f a programmer can only epect the state of the business logic to update once per minute, stochastically, techniques will have to be developed for certain kinds of applications to perhaps cache certain epected state changes and wait on back end processing before updating the front end.  ven more complicated is the fact that a block housing transactions and associated Ðpp state changes can be constructed and included in the blockchain but then find itself not part of the main consensus blockchain soon after and possibly have the associated transactions remain unconfirmed and unprocessed for a period of time.  orse, an intervening transaction might be processed first, thus rendering the first transaction invalid.  n entire new field of blockchain-based software development techniques is required.  any developers will forge novel solutions.  nd some fundamentally new approaches may be required.  nd for this, we are developing the rypto urrency esearch roup () to conduct general research of benefit to the entire niche.  lease watch this space for more on the .
Titre: How do you know Ethereum is secure?\nAuteur: Jutta Steiner\nDate: July 7, 2015\nURL: https://blog.ethereum.org/2015/07/07/know-ethereum-secure\nCatégorie: Non catégorisé\n\n==================================================\n\ns 'm writing this, ’m sitting in the ondon office and pondering how to give you a good overview about the work we’ve been doing to secure thereum’s protocols, clients and pp-network. s you might remember,  joined the thereum team at the end of last year to manage the security audit. s spring has passed and summer arrived and meanwhile several audits finished, it’s now a good time for me to share some results from the inspection of the world computer’s machine room. -)nnhis much is clear, as much as the delivery of the clients is an elaborate product development process, it is an eciting yet heavily comple research effort. he latter is the reason why even the best planned development schedule is subject to change as we discover more about our problem domain.nnhe security audit started at the end of last year with the development of a general strategy for ensuring maimum security for thereum. s you know, we have a security driven, rather than a schedule driven development process. ith this in mind, we put together a multi-tiered audit approach consisting ofnnnalyses of the new protocols and algorithms by established blockchain researchers and specialised software security companiesnnnd-to-end audit of protocols and implementation by a world-class epert security consultancy (o followed by ++ and a basic audit for the educational ython client), as well asnnhennbug bounty programnn.nnhe analyses of the new protocols and algorithms covered topics like the security ofnnhe gas economicsnnhe newly devised -resistant proof of work puzzle as well asnnhe economic incentivisation of mining nodes.nnhe “crowd-sourced” audit component started around hristmas along with our bug bounty program. e had set aside an -digit satoshi amount to reward people who found bugs in our code. e’ve seen very high qualitynnsubmissionsnnto our bug bounty program and hunters received corresponding rewards. he bug bounty program is is still running and we need further submissions to use up the allocated budget...nnhe first major security audit (covering the gas economics and o puzzle) by security consultancy east uthority was started in anuary and continued until the end of winter. e are very glad that we agreed with most of our eternal auditors that those audit reports will be publicly available once the audit work and fiing of the findings is completed. o along with this blog post, we are delighted to present the east uthoritynnaudit reportnnand accompanyingnnblog postnn.  n addition, the report contains helpful recommendations for Ðpp developers to ensure secure design and deployment of contracts. e epect to publish further reports as they become available.nne have also engaged another software security firm at the beginning of the year to provide audit coverage on the o implementation. iven the increased security that comes with multiple clients and as av mentioned in his previous post, we have also decided to give the ython and ++ audit a lightweight security audit starting early uly. he ++ code will receive a full audit right after –nnour goal with this approach is to ensure several available audited clients as early as possible during the release process.nne kicked off this most encompassing audit for the o client, aka the “end to end audit”, in ebruary with a one-week workshop that would be followed by weeks of regular check-in calls and weekly audit reports. he audit was embedded in a comprehensive process for bug tracking and fiing, managed and thoroughlynntracked on ithubnnby ustav with hristoph and imitry coding up the corresponding required tests.nns the name implies, the end-to-end audit was scoped to cover “everything” (from networking to the thereum  to syncing layer to o) so that at least one auditor would have cross checked the various core layers of thereum. ne of the consultants recently summarized the situation pretty succinctly “o be honest, the testing needs of thereum are more comple than anything ’ve looked at before”. s av reported in hisnnlast blog postnn, because of the significant changes in the networking and syncing strategy we eventually decided to commission further audit work for o – which we are about to finish this week. he kick-off for the end-to-end ++ and basic ython audits is taking place now.nnhe audit work with subsequent bug fiing and regression testing as well as related refactoring and redesign (of networking and syncing layer) make up the majority of work that’s keeping the developers busy right now. ikewise, fiing of findings, redesign and regression testing are the reason for the delay in the delivery. n addition, the lympic testing phase has taught us a great deal about resiliency under various scenarios, such as slow connections, bad peers, odd behaving peers and outdated peers. he greatest challenge so far has been fighting off and recovering from forks. e learnt a lot from the recovery attempts in terms of required processes when it comes to dealing with these type of scenarios and incidents.nnt might not come as a surprise that the various audits represent a significant ependiture – and we think money that could not be better invested.nns we draw closer to release, security and reliability is increasingly uppermost in our minds, particularly given the handful of critical issues found in the lympic test release. e are very grateful for the enthusiasm and thorough work that all auditors have done so far. heir work helped us sharpen the specification in the ellow aper and to weed out ambiguity and fi several subtle issues, and they helped with identifying a number of implementation bugs.
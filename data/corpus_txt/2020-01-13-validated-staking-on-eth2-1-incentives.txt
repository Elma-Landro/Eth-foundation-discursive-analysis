Titre: Validated, staking on eth2: #1 - Incentives\nAuteur: Carl Beekhuizen\nDate: January 13, 2020\nURL: https://blog.ethereum.org/2020/01/13/validated-staking-on-eth2-1-incentives\nCat√©gorie: Non cat√©goris√©\n\n==================================================\n\nhanks to oseph chweitzer and anny yan for review.nnelcome back! aving discussed eth's design philosophynnlast timenn, today's focus is on eth's incentives through the lens of that philosophy. ore specifically, we look at the incentives effecting eth and how they are realised in the form of rewards, penalties, and slashings.nne then walk through how and why validators are incentivised to remain online, why younnwon'tnnbe slashed for going offline, and more. et's dig in.nnf not for being offline, when do slashings occur ‚öîÔ∏ènnlashing has two purposes () to make it prohibitively epensive to attack eth, and () to stop validators from being lazy by checking that they actually perform their duties. lashing a validator is to destroy (a portion of) the validator's stake if they act in annprovablynndestructive manner. he two major ways a validator can behave slashably maliciously within eth phase  are double voting and surround voting (read thennoriginal papernnfor more on how asper  works in detail)nnouble votingnnis when a validator votes for two different blocks during the same epoch, which means they are signalling support for two different versions of reality. he simplest eample of why this is forbidden is a validator sending transactionnnannannannin blocknnnnnnnnandnnbnnbnnbnnin blocknnnnnnnnwherennannannannandnnbnnbnnbnnspend the same . his is the roof of take version of the classicnndouble-spend attacknn.nnlashing ofnnsurround votesnnalso prevents two versions of the chain from becoming finalised by punishing validators who create votes which present multiple different versions of reality which they claim to be true at the same time. ore specifically, attestations (votes for blocks) are surround votes when a validator attests to one version of reality and later attests to another version, but in a way that doesn't make clear that they no longer believe in the first.nnouble and surround voting are the only way validators can be slashed within phase , but additional rules are added in later phases to ensure that validators actually store and make available the shard data that they sign (which prevents validators from being lazy or from withholding information).nn validator that correctly follows the protocol never emits a slashable vote in normal operationsnn. f not an intentionally malicious action, forming a slashable message only occurs as a result of some bug or accident. o minimise the pain of such errors, the amount of stake destroyed is proportional to the number of other validators slashed around the same time. f a small number of validators commit some slashable offence, it is unlikely that they are trying to attack eth because a successful attack requires many validators. lashings that occur in small numbers are therefore assumed to be honest mistakes and are punished lightly (a minimum of  ). n the other hand if many validators commit an offence during a similar time, then a large amount of their stake is burnt (up to their full balance) as it is assumed to be an attack on the network.nnalidators that are slashed are prevented from participating in the protocol further and are forcibly eited. n the case of an honest mistake, this prevents offending validators from doing further harm to themselves by being slashed again whereas in the malign instance, this removes malicious validators from the protocol.nno what happens to validators who are offline üö´üë©‚Äçüíªnnalidators that are offline when they are supposed to be participating in the protocol are penalised, but in the normal case these validatorsnnonly stand to lose what they would have made as rewards had they participated correctly in the protocolnn. his means that validators that are online  % of the time will still see their stake increase over time.nns a result of this mechanism,nnvalidator clients that need to go offline for maintenance etc, are usually best off if they just go offine for a short time instead of eiting and re-joining the protocol (both of which have associated delays)nn.nnhis means that validators need not go to etreme lengths with backup clients or redundant internet connections as the repercussions of being offline are not so severe. n fact, any such system in which two entities can sign messages can be detrimental as primary and backup clients could end up both being online at the same time and emitting slashable votes (via the double voting mechanism eplained earlier) as was the case withnnthe first osmos slashingnn.nnhis regime of offline penalties holds provided that blocks are being finalised (/ of validators (weighted by stake) are online and their votes are being counted). his is the epected state of eth during normal operation. f less than / of nodes are online then something has gone catastrophically wrong in the realm of eth. he family of consensus protocols that th's asper is a part of can no longer reach agreement under these conditions.nnhat does eth do if  / of validators are offline üí£nnhis is where the inactivity leak mentioned at the start of the article comes in. henninactivity leaknnreduces the balances of the offline nodes over time so that the ratio of online validators to total validators (weighted by stake) can once again eceed / so eth can continue to make decisions as a protocol.nnnactivity leaks are one of the ways eth has been designed to survive a -style event. f such an event were to knock out more than / of all validators, then the offline validators would find that their balances decreased to the point that their participation was no longer needed for eth to continue as a chain.nnnti-correlation and decentralisationnnoth the slashing mechanism and the inactivity leak encourage validators to make decisions that cause their nodes to fail in manners different to those of othersnn. hat is -- to ensure the smallest possible slashings and to prevent inactivity leaks, a validator should attempt to have their clients fail in ways that are different to others'.nnhis places pressure on all validators to decentralise every aspect of being a validator as, for eample, validators that rely on the same source of truth like nfura or use  to host their clients will be worse off if something goes wrong.nnith all the many ways to be punished, why would a someone want to be a validator üìànns stated in the first article, "validators will be lazy, take bribes, and they will try to attack the system unless they are otherwise incentivised not to." he punishments discussed so far discourage bad behaviour, but rewards are needed to encourage validators to perform actions that benefit eth.nnhere are  major classes of rewardsnnhistleblower rewards üöìnn validator that raises the alarm on another validator by providing proof that gets them slashed is rewarded for their efforts in cleaning up the eth streets.nnroposer rewards ‚¨úÔ∏è‚õì‚¨õÔ∏è‚õì‚¨úÔ∏ènnalidators are randomly assigned the duty of producing a block the chosen validator is called thennproposernn.  proposer is rewarded for their efforts in the following waysnnncluding a proof from a wistleblower that gets a validator slashednnncluding new attestations from other validatorsnnhese rewards encourage validators to provide helpful information to the chain when they are chosen to produce a block.nnttester rewards ‚úînnttestations are votes that signal that a validator agrees with a decision in eth. hese types of messages form the basis of consensus and are rewarded in  different waysnnetting your attestation on-chainnngreeing with other validators about the history of the chainnngreeing with others about the head of the chainnnetting your attestation on chain quicklynnointing to the correct block in the assigned shardnncaling validator earnings üí∏nnhere are two common approaches for paying validators in o systems fied rewards and fied inflation. n the fied reward model, validators are paid a fied amount for doing their jobs, and the inflation rate then depends on how many validators sign up. his has the problem of how to correctly set the reward rate. f the reward rate is set too low then too few validators will participate, while a reward rate that is too high encourages etensive validation beyond the requisite security and wastes money.nnhe complimentary model is one with a fied inflation rate where some total reward is divided amongst the active validators. his model has the benefit of allowing market forces to find the right amount to pay validators as they all make individual decisions about whether or not to participate based on current earnings. here are downsides to this model. alidator earnings can be erratic making profitability decisions difficult for individual validators. his model also makes the protocol vulnerable tonndiscouragement attacksnnin which validators attempt to prevent each other from participating to increase their own profit (even at their own temporary loss).nneth aims to have the best of both worlds by choosing a reward model in which validator rewards are proportional to the square root of the total amount of  staked. his hybrid model attempts to suppress variations in inflation and validator return rates while still allowing market forces to determine the correct amount to pay each validator for the security provided.nnope for the best, but epect the worst üõ°Ô∏ènnach of the facets of eth's incentive scheme is a result of designing a protocol under the philosophy laid out in the last article. amples of this include the anti-correlation mechanisms encouraging decentralisation and inactivity leaks helping eth to survive orld ar , but the main idea underpinning how the incentives work is the assumption that "validators will be lazy, take bribes, and that they will try to attack the system unless they are otherwise incentivised not to". f someone attacks eth in one of the ways discussed here, they better be prepared to throw away a lot of  because one way or another they are going to lose it all.
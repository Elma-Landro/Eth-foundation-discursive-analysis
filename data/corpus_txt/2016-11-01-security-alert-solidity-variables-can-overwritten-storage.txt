Titre: Security Alert - Solidity - Variables can be overwritten in storage\nAuteur: Christian Reitwiessner\nDate: November 1, 2016\nURL: https://blog.ethereum.org/2016/11/01/security-alert-solidity-variables-can-overwritten-storage\nCatégorie: Non catégorisé\n\n==================================================\n\nummarynnn some situations, variables can overwrite other variables in storage.nnffected olidity compiler versionsnn.. to .. (including .. pre-release versions)nnetailed descriptionnntorage variables that are smaller than  bits are packed together into the same  bit slot if they can fit. f a value larger than what is allowed by the type is assigned to the first variable, that value will overwrite the second variable.nnhis means if an attacker can cause an overflow in the value of the first variable, then the second variable can be modified. reating an overflow in the first variable is possible using arithmetics or by directly passing in a value from the call data (values in call data are aligned to  bytes, and padding is neither verified nor enforced).nnontracts that only use the types listed below for state variables arennnotnnaffected. rrays, mappings and structs (based on those following types) are alsonnnotnnaffectednnsigned integers, including sizes smaller than  bitsnnbytes types, including sizes smaller than  bitsnnunsigned integers (uint) of  bitsnnontracts with types smaller than  bits that are never net to each other (note that state variables of base contracts are "pulled in") arennnotnnaffected.nnhe thereum multisignature wallet contract isnnnotnnaffected.
ote that addresses take up  bits, so contracts that only use addresses and -bit types are safe. dditionally, addresses and booleans are almost never manipulated via arithmetic operations in practice, so contracts using only addresses, booleans and  bit types should also be safe.nnhe following contracts may be affected
ontracts containing two or more contiguous state variables where the sum of their sizes is less than  bits and the first state variable is not a signed integer and not of bytes type.nnypes smaller than  bits include
bool, enums, uint, ..., uint, int, ..., int, address, any contract typennecommended actionnnecompile contracts that have not yet been deployed using at least olidity release .. (not the pre-release or nightly version).nneactivate, remove funds from, or upgrade already deployed contracts.nnhis vulnerability was found by github.com/catageek](https//github.com/catageek) https//github.com/ethereum/solidity/issues/](https//github.com/ethereum/solidity/issues/)
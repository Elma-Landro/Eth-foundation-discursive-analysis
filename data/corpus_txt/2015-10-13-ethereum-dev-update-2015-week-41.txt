Titre: Ethereum Dev Update 2015 / Week 41\nAuteur: Taylor Gerring\nDate: October 13, 2015\nURL: https://blog.ethereum.org/2015/10/13/ethereum-dev-update-2015-week-41\nCatégorie: Non catégorisé\n\n==================================================\n\nn an effort to bring the community more information about the going-ons at thereum, we're planning to release semi-weekly updates of project progress.  hope this provides some high-level information without having to live on itub )nnhe o and ++ teams have daily standups and are making regular progress along with several other improvements around the ecosystem. oncurrent with this, the teams are gearing up for , preparing talks and presentations along with finalizing more details in the coming weeks. f you haven't already registered, visitnnhttps//devcon.ethereum.org/nnto join the fun net month in ondon. ow on to the updates...nnistnnoping to have  wallet net week with chocie of eth or th client. he team is spending time polishing remaining bugs and bundling binaries for the various platforms.nnight lientnnhe  subprotocol being developed and prototyped into the clients. irst release is only a start and work will continue on light-client features into the future, more robustly supporting mobile and embedded scenarios. eparately, work on fast-syncing will help aid in this transition.nnolidity/innmprovements to passing certain types in olidity has been added along with improving eception handling throughout. ultiple improvements have been pushed to hristian'snnbrowser-soliditynnproject. ontinued refinement is also being put into the i .nncpp-ethereumnnhe team is currently working towards . release and hoping to have new  available soon. efactoring of the error reporting mechanism ("ceptions") and the ability for libraries to access storage of the calling contract by passing storage reference types is now possible. dditionally, the build system being overhauled with a switch to enkins.nngo-etheruemnnontinuing working towards eth . release, which will consist primarily of internal  improvements and speedups in preparation for future features. ore work being put into indows builds, hoping to have source-built scripts available soon. ast-sync code being added to client, allowing full-nodes to syncronize to the network much quicker.
Titre: Dev Update: Formal Methods\nAuteur: Christian Reitwiessner\nDate: September 1, 2016\nURL: https://blog.ethereum.org/2016/09/01/formal-methods-roadmap\nCatégorie: Non catégorisé\n\n==================================================\n\noday,  am delighted to announce that oichi irai (nnpirapirannon github) is joining the thereum project as a formal verification engineer. e holds a h from the niversity of okyo on the topic of formalizing communicating parallel processes and created formal verification tools for thereum in his spare time.nnn his own wordsnn’m joining thereum as a formal verification engineer. y reasoning formal verification makes sense as a profession only in a rare situation wherennthe verification target follows short, simple rules ()nnthe target carries lots of value (th and other tokens)nnthe target is tricky enough to get right (any nontrivial program)nnand the community is aware that it’s important to get it right (maybe).nny last job as a formal verification engineer prepared me for this challenge. esides, around thereum, ’ve been playing with two projects an online service callednnr. ’s thereum ontract nalyzernnandnna github repositorynncontaining oq proofs. hese projects are at the opposite etremes of a spectrum between an automatic analyzer and a manual proof development.nnonsidering the collective impact to the whole ecosystem, ’m attracted to an automatic analyzer integrated in a compiler. any people would run it and some would notice its warnings. n the other hand, since any surprising behavior can be considered a bug, any surprise should be removed, but computers cannot sense the human epectations. or telling human epectations to the machines, some manual efforts are necessary. he contract developers need to specify the contract in a machine-readable language and give hints to the machines why the implementation matches the specification (in most cases the machine wants more and more hints until the human realizes a bug, frequently in the specification). his is labor intensive, but such manual efforts are justifiable when a contract is designed to carry multi-million dollars.nnaving a person dedicated to formal methods not only gives us the ability to move faster in this important but also fruitful area, it hopefully also allows us to communicate better with academia in order to connect the various singular projects that have appeared in the past weeks.nnere are some projects we would like to tackle in the future, most of them will probably be done in cooperation with other teams.nnoliditynnetending the olidity to hy translation to the full olidity language (maybe switch to *)nnformal specification of oliditynnsynta and semantics of modal logics for reasoning about multiple partiesnnommunitynncreating a map of formal verification projects on thereumnncollecting buggy olidity codes, for benchmarking automatic analyzersnnanalyzing deployed contracts on the blockchain for vulnerabilities (relatednn toolnn)nnoolsnnprovide a human- and machine-readable formalization of the , which can also be eecutednndeveloping formally verified libraries in  bytecode or oliditynndeveloping a formally verified compiler for a tiny languagenneplore the potential for interaction-oriented languages ("if  happens then do  you can only do  if you did ")
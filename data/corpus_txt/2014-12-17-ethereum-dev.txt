Titre: Ethereum ÐΞV: What are we doing?\nAuteur: Gavin Wood\nDate: December 17, 2014\nURL: https://blog.ethereum.org/2014/12/17/ethereum-dev\nCatégorie: Non catégorisé\n\n==================================================\n\nso a minor update about what we are (and are not) doing here at thereum .nne are, first and foremost, developing a robust quasi-uring-complete blockchain. his is known as thereum. side from having quasi-uring-completeness, it delivers on a number of other important considerations, stemming from the fact we are developing entirely new blockchain technology includingnnspeedy, through a  second blocktimennlight-client-friendly through the use of erkle roots in headers for compact inclusion/state proofs and  integration to allow light clients to host & share small parts of the full chainnnÐpp-friendly, even for light-clients, through the use of multi-level loom filters and transaction receipt erkle tries to allow for lightweight log-indeing and proofsnnfinite-blockchain-friendly - we designed the core protocol to facilitate upgrading to this technology, further reducing light-client footprint and helping guarantee mid-term scalabilitynn-unfriendly - through the (as yet unconfirmed) choice of o algo and the threat we'll be upgrading to o in the ot-oo-istant future.nnt is robust becausennit is unambiguously formally defined, allowing a highly tractable analysis, saturation tests and formal auditing of implementationsnnit has an etensive, and ultimately complete, set of tests for providing an eceptionally high degree of likelihood a particular implementation is conformantnnmodern software development practices are observed including a  system, internal unit tests, strict peer-reviewing, a strict no-warnings policy and automated code analysersnnits mesh/pp backend (aka libpp) is built on well-tested secure foundations (technology stemming from the ademlia project)nnofficial implementations undergo a full industry-standard security auditnna large-scale stress test network will be instituted for profiling and testing against likely adverse conditions and attacks prior to final release.nnecondly (and at an accordingly lower priority), we are developing materials and tools to make use of this unprecedented technology possible. his includesnndeveloping a single custom-designed  (contract-orientated) languagenndeveloping a secure natural language contract specification format and infrastructurennformal documentation for help coding contractsnntutorials for help coding contractsnnsponsoring web-based projects in order to get people into developmentnndeveloping a block chain integrated development environment.nnhirdly, to facilitate adoption of this technology, gain testers and spur further development we are developing, collaborating over and sponsoring a number of force-multiplying technologies that leverage pre-eisting technology includingnna graphical client "browser" (leveraging drop-in browser components from the hromium project and t  technology)nna set of basic contracts and Ðpps, including for registration, reputation, web-of-trust and accounting (leveraging the pre-eisting compilers and development tech)nna hybrid multi-/messaging system, codenamed hisper (leveraging the pre-eisting pp back end & protocols)nna simple reverse-hash lookup , codenamed warm (also leveraging the pre-eisting pp back end & protocols), for which there is an ongoing internal implementation, but which could end up merging or being a collaboration with the  project.nne are no longer actively targeting multiple languages ( and utan are mothballed, erpent is continued as a side project). e are not developing any server technology. nd, until there is a working, robust, secure and effective block chain alongside basic development tools, other parts of this overall project have substantially lower priority.nnollowing on from the release of the thereum block chain, epect the other components to get increasingly higher amounts of time dedicated to them.